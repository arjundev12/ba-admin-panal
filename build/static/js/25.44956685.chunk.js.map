{"version":3,"sources":["constant.js","views/pagination/pagination.js","views/Transactions/mining.js"],"names":["baseUrl","img_url","Pagination","showPerPage","onPaginationChange","total","page","useState","counter","setCounter","numberOfButtons","setNumberOfButoons","console","log","useEffect","Math","ceil","onButtonClick","type","className","aria-label","class","onClick","Array","fill","map","el","index","MiningTransactions","useHistory","setTotal","setPage","setIndex","filters","setFilters","totalAmount","setTotalAmount","options","headers","localStorage","getItem","transactions","setTransactions","search","setSearch","useParams","id","loadData","a","data","limit","transaction_type","Object","keys","length","constructor","sort","toId","text","axios","post","CONSTANT","res","warn","code","toast","docs","total_amount","item","_id","onInputChange","e","createdAt","onInputChange1","target","name","value","alignRight","title","onSelect","Item","eventKey","placeholder","onChange","striped","bordered","hover","i","amount","status","start","end"],"mappings":"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","file":"static/js/25.44956685.chunk.js","sourcesContent":["export const baseUrl  = \"http://3.12.65.48:4001\"\r\n// export const baseUrl  = \"http://localhost:4001\"\r\n// export const img_url = \"http://localhost:4001/\"\r\nexport const img_url = \"http://3.12.65.48:4001/\"\r\nexport const CONSTANT_NUMBER_2 = 'hello I am also a constant';\r\nexport const sample_file = 'http://3.12.65.48:4001/src/assets/samplesheet.xlsx'","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Table } from 'react-bootstrap'\r\nconst Pagination = ({ showPerPage, onPaginationChange, total,page }) => {\r\n  const [counter, setCounter] = useState(page);\r\n  const [numberOfButtons, setNumberOfButoons] = useState(\r\n  );\r\n\r\n console.log(\"numberOfButtons\",numberOfButtons )\r\n console.log(\"total\",total )\r\n console.log(\"counter\",counter )\r\n console.log(\"showPerPage\",showPerPage )\r\n  useEffect(() => {\r\n    const value = showPerPage * counter;\r\n    onPaginationChange(counter, value - showPerPage);\r\n    setNumberOfButoons(Math.ceil(total / showPerPage))\r\n  }, [counter]);\r\n\r\n  const onButtonClick = (type) => {\r\n    if (type === \"prev\") {\r\n      if (counter === 1) {\r\n        setCounter(1);\r\n      } else {\r\n        setCounter(counter - 1);\r\n      }\r\n    } else if (type === \"next\") {\r\n      if (numberOfButtons === counter) {\r\n        setCounter(counter);\r\n      } else {\r\n        setCounter(counter + 1);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"d-flex justify-content-center\">\r\n      <nav aria-label=\"Page navigation example\">\r\n        <ul class=\"pagination\">\r\n          <li class=\"page-item\">\r\n            <a\r\n              class=\"page-link\"\r\n              // href=\"!#\"\r\n              onClick={() => onButtonClick(\"prev\")}\r\n            >\r\n              Previous\r\n            </a>\r\n          </li>\r\n\r\n          {new Array(numberOfButtons).fill(\"\").map((el, index) => (\r\n            <li class={`page-item ${index + 1 === counter ? \"active\" : null}`}>\r\n              <a\r\n                class=\"page-link\"\r\n                // href=\"!#\"\r\n                onClick={() => setCounter(index + 1)}\r\n              >\r\n                {index + 1}\r\n              </a>\r\n            </li>\r\n          ))}\r\n          <li class=\"page-item\">\r\n            <a\r\n              class=\"page-link\"\r\n              // href=\"!#\"\r\n              onClick={() => onButtonClick(\"next\")}\r\n            >\r\n              Next\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useLocation, Link, useParams } from 'react-router-dom'\r\nimport axios from \"axios\";\r\nimport { Button, Table, DropdownButton, Dropdown } from 'react-bootstrap'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport *as  CONSTANT from '../../constant'\r\nimport Pagination from '../pagination/pagination'\r\n\r\nimport '../../css/style.css'\r\n\r\n\r\n\r\n\r\nconst MiningTransactions = () => {\r\n    const history = useHistory()\r\n    //////////////////////////////////pagination/////////////////////////////////////\r\n    const [showPerPage, setShowPerPage] = useState(10);\r\n    const [total, setTotal] = useState(0);\r\n    const [page, setPage] = useState(1);\r\n    const [index, setIndex] = useState(1);\r\n    const [filters, setFilters] = useState({})\r\n    const [totalAmount, setTotalAmount] = useState({})\r\n    const options = {\r\n        headers: {'token': localStorage.getItem('token')}\r\n      };\r\n    const onPaginationChange = (start, end) => {\r\n        console.warn(\"getee, \", start, end)\r\n        setPage(start)\r\n        setIndex(end)\r\n    };\r\n    const [transactions, setTransactions] = useState([]);\r\n    const [search, setSearch] = useState({});\r\n    const { id } = useParams();\r\n    useEffect(() => {\r\n        loadData(page, filters);\r\n\r\n    }, [page, total, filters ,search]);\r\n    const loadData = async (page, filters = null) => {\r\n        const data = {\r\n            page: page,\r\n            limit: 10,\r\n            transaction_type: 'mining'\r\n        }\r\n\r\n        if (!(Object.keys(filters).length === 0 && filters.constructor === Object)) {\r\n            data.sort = filters\r\n        }\r\n        if (!(Object.keys(search).length === 0 && search.constructor === Object)) {\r\n            data.toId = search.text\r\n        }   \r\n        console.log(\"datadata\", data)\r\n        const res = await axios.post(`${CONSTANT.baseUrl}/api/admin/get-transaction`, data, options);\r\n        console.warn(res.data.data)\r\n        if (res.data.code == 200) {\r\n            toast(\"List get successfully\")\r\n            setTransactions(res.data.data.docs);\r\n            await setTotal(res.data.data.total)\r\n            if(res.data.data.total_amount){\r\n                await res.data.data.total_amount.map((item)=>{\r\n                    if(item._id == 'mining'){\r\n                        setTotalAmount(item)\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n    };\r\n    const detailsView = async (item) => {\r\n        console.warn(\"inside handle click\", item)\r\n        // history.push(`/user/${item._id}  `)\r\n    }\r\n    const onInputChange = async (e) => {\r\n        console.log(\"targat\", e)\r\n        let filter = {}\r\n        if (e == 'option-1') {\r\n            setFilters({ ...filters, createdAt: -1 })\r\n        }\r\n        if (e == 'option-2') {\r\n            setFilters({ ...filters, createdAt: 1 })\r\n        }\r\n        // if(e == 'option-3' ){\r\n        //     setFilters({ ...filters, transaction_type: 1 })\r\n        // }\r\n        // if(e == 'option-4' ){\r\n        //     setFilters({ ...filters, type: 1 })\r\n        // }\r\n\r\n    };\r\n    const onInputChange1 = async (e)=>{\r\n        console.log(\"search text\", e.target.name, e.target.value )\r\n        setSearch({ ...search, [e.target.name]: e.target.value });\r\n    }\r\n    return (\r\n        <div>\r\n \r\n       <h3 className=\"heading-content\">Total Mining Amount: {totalAmount?totalAmount.totalAmount : \"00\" } Rs</h3>\r\n            <DropdownButton className='fltR' alignRight\r\n                title=\"filter\"\r\n                id=\"dropdown-menu-align-right\"\r\n\r\n                onSelect={e => onInputChange(e)}>\r\n                <Dropdown.Item eventKey=\"option-1\">New transactions</Dropdown.Item>\r\n                <Dropdown.Item eventKey=\"option-2\">Old transaction</Dropdown.Item>\r\n            </DropdownButton>\r\n            <div>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"searchBox\"\r\n                        placeholder=\"search by transaction id....\"\r\n                        name=\"text\"\r\n                        value={search.text}\r\n                        onChange={e => onInputChange1(e)}\r\n                    />\r\n            </div>\r\n\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>S.no</th>\r\n                        <th>transaction_type</th>\r\n                        <th>type</th>\r\n                        <th>amount</th>\r\n                        {/* <th>Minner Status</th> */}\r\n                        <th>Status</th>\r\n                        {/* <th>Actions</th> */}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        transactions.map((item, i) => <tr>\r\n                            <td>{i + index + 1}</td>\r\n                            <td>{item.transaction_type}</td>\r\n                            <td>{item.type}</td>\r\n                            <td>{item.amount}</td>\r\n                            <td>{item.status}</td>\r\n                            {/* <td>{item.minner_Activity + \"\"}</td> */}\r\n                            {/* <td>\r\n                                <select class=\"form-control\" name=\"minner_Activity\" value={item.minner_Activity}\r\n                                    onChange={e => onInputChange(e, item)}>\r\n                                    <option value= {true} >Active</option>\r\n                                    <option value={false}>Inactive</option>\r\n                                </select></td> */}\r\n                            {/* <td><Link className=\"btn btn-primary mr-2 \" to={`/user/${item._id}`}>view </Link>\r\n                                <Link className=\"btn btn-primary mr-2\" to={`/user/edit/${item._id}`}> edit </Link>\r\n                                </td> */}\r\n                        </tr>)\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n            <ToastContainer />\r\n            {\r\n                total > 0? <Pagination\r\n                showPerPage={showPerPage}\r\n                onPaginationChange={onPaginationChange}\r\n                total={total}\r\n                page={page}\r\n            />:\"\"\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MiningTransactions\r\n"],"sourceRoot":""}
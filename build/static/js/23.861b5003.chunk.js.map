{"version":3,"sources":["views/Customers/documents.js","views/pagination/pagination.js"],"names":["DocumentsList","useHistory","useState","total","setTotal","page","filters","search","useEffect","loadData","customerlist","setCustomerlist","a","data","limit","Object","keys","length","constructor","sort","searchData","text","_id","localStorage","getItem","console","log","axios","post","CONSTANT","response","code","toast","docs","charset","http-equiv","content","name","href","rel","crossorigin","class","data-progress-text","data-progress","striped","bordered","hover","map","item","i","first_name","company","company_name","number","to","src","Pagination","showPerPage","onPaginationChange","counter","setCounter","numberOfButtons","setNumberOfButoons","Math","ceil","onButtonClick","type","className","aria-label","onClick","Array","fill","el","index"],"mappings":"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","file":"static/js/23.861b5003.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useLocation, Link, useParams } from 'react-router-dom'\r\nimport axios from \"axios\";\r\nimport { Button, Table, DropdownButton, Dropdown, Modal, Tabs, Tab, Sonnet } from 'react-bootstrap'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport *as  CONSTANT from '../../constant'\r\nimport Pagination from '../pagination/pagination'\r\nimport \"jspdf-autotable\";\r\nimport '../../css/style.css'\r\n\r\n\r\n\r\nconst DocumentsList = () => {\r\n    //httpEquiv\r\n    let history = useHistory();\r\n    const [showPerPage, setShowPerPage] = useState(10);\r\n    const [total, setTotal] = useState(0);\r\n    const [page, setPage] = useState(1);\r\n    const [index, setIndex] = useState(1);\r\n    const [filters, setFilters] = useState({})\r\n\r\n    // const [customer, setcustomer] = useState([]);\r\n    const [search, setSearch] = useState({});\r\n\r\n    useEffect(() => {\r\n        loadData(page, filters)\r\n    }, [page, total, filters, search])\r\n    const [customerlist, setCustomerlist] = useState([])\r\n    const onInputSearch = async (e) => {\r\n        console.log(\"search text\", e.target.name, e.target.value)\r\n        setSearch({ ...search, [e.target.name]: e.target.value });\r\n    }\r\n    const loadData = async (page, filters = null) => {\r\n        const data = {\r\n            page: page,\r\n            limit: 10\r\n        }\r\n\r\n        if (!(Object.keys(filters).length === 0 && filters.constructor === Object)) {\r\n            data.sort = filters\r\n        }\r\n        if (!(Object.keys(search).length === 0 && search.constructor === Object)) {\r\n            data.searchData = search.text\r\n        }\r\n        data._id = localStorage.getItem('subadminid')\r\n        console.log(\"datadata\", data)\r\n\r\n        let response = await axios.post(`${CONSTANT.baseUrl}/api/admin/customer-list`, data);\r\n        if (response.data.code == 200) {\r\n            toast(\"Add successfully\");\r\n            // setCustomer(response.data.data)\r\n            console.log(\"datadata\", response.data.data.docs)\r\n            setCustomerlist(response.data.data.docs);\r\n            await setTotal(response.data.data.total)\r\n        } else {\r\n            console.log(\"response\", response)\r\n        }\r\n    }\r\n\r\n\r\n    const [filepath, setFilepath] = useState();\r\n    const onSetFile = async e => {\r\n        console.warn(\"............image....\", [e.target.name], e.target.files[0])\r\n        const formData = new FormData();\r\n        formData.append(\r\n            \"file\",\r\n            e.target.files[0],\r\n        );\r\n        console.warn(\"file\", formData)\r\n        const res = await axios.post(`${CONSTANT.baseUrl}/api/admin/uploade-doc`, formData, { \"Content-Type\": \"multipart/form-data\" });\r\n        console.log(\"response\", res.data)\r\n        if (res.data.code == 200) {\r\n            setFilepath(res.data.data)\r\n        } else {\r\n            console.warn(\"error\", res.data.message)\r\n        }\r\n        console.log(\"filepath\", filepath)\r\n    }\r\n    /////////////////////////////////////////////////generatePdfFile////////////////////////////////\r\n\r\n    return (\r\n        <>\r\n\r\n            <head>\r\n\r\n                <meta charset=\"utf-8\" />\r\n                <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8\" />\r\n                <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n                <meta name=\"description\" content=\"\" />\r\n                <meta name=\"author\" content=\"\" />\r\n                <meta name=\"keyword\" content=\"\" />\r\n                <title>Winklix Internet</title>\r\n\r\n                <link href=\"css/font-awesome.min.css\" rel=\"stylesheet\" />\r\n                <link href=\"https://fonts.googleapis.com/css?family=Poppins:100,200,300,400,500,700,800\" rel=\"stylesheet\" />\r\n                <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\r\n                <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\r\n                <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700;900&display=swap\" rel=\"stylesheet\" />\r\n                <link href=\"css/style.css\" rel=\"stylesheet\" />\r\n                <link href=\"css/custom.css\" rel=\"stylesheet\" />\r\n            </head>\r\n            <body class=\"app header-fixed sidebar-fixed aside-menu-fixed aside-menu-hidden    pace-done\">\r\n\r\n                <div class=\"pace-progress\" data-progress-text=\"100%\" data-progress=\"99\" >\r\n                    <div class=\"pace-progress-inner\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"pace-activity\">\r\n\r\n                </div>\r\n\r\n\r\n                <div class=\"app-body\">\r\n                    <div class=\"container-fluid\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-5 col-sm-5 pd-0\">\r\n                                <h2 class=\"customer\">Customers</h2>\r\n                            </div>\r\n\r\n\r\n\r\n                            <div class=\"container-fluid pd-0\">\r\n                                <div class=\"customer-table\">\r\n                                    <Table striped bordered hover>\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>S.no</th>\r\n                                                <th>Customer name</th>\r\n                                                <th>Company</th>\r\n                                                {/* <th>GST REGISTRATION TYPE</th> */}\r\n                                                {/* <th>GSTIN </th> */}\r\n                                                <th>PHONE</th>\r\n                                                {/* <th>Minner Status</th> */}\r\n                                                {/* <th>OPEN BALANCE</th> */}\r\n                                                <th>ACTION</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {\r\n                                                customerlist.map((item, i) => <tr>\r\n                                                    <td>{i + 1}</td>\r\n                                                    <td><a href={`#/add/folder/${item._id}`}> {item.first_name} {item._id}</a></td>\r\n                                                    <td><a href={`#/add/folder/${item._id}`}> {item.company.company_name}</a></td>\r\n                                                    <td><a href={`#/add/folder/${item._id}`}> {item.number}</a></td>\r\n                                                    <td><Link to={`/add/folder/${item._id}`}>CREATE FOLDER</Link></td>\r\n                                                \r\n                                                </tr>)\r\n                                            }\r\n                                        </tbody>\r\n                                    </Table>\r\n\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <script src=\"js/jquery.min.js\"></script>\r\n                <script src=\"js/popper.min.js\"></script>\r\n            </body>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DocumentsList\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Table } from 'react-bootstrap'\r\nconst Pagination = ({ showPerPage, onPaginationChange, total,page }) => {\r\n  const [counter, setCounter] = useState(page);\r\n  const [numberOfButtons, setNumberOfButoons] = useState(\r\n  );\r\n\r\n console.log(\"numberOfButtons\",numberOfButtons )\r\n console.log(\"total\",total )\r\n console.log(\"counter\",counter )\r\n console.log(\"showPerPage\",showPerPage )\r\n  useEffect(() => {\r\n    const value = showPerPage * counter;\r\n    onPaginationChange(counter, value - showPerPage);\r\n    setNumberOfButoons(Math.ceil(total / showPerPage))\r\n  }, [counter]);\r\n\r\n  const onButtonClick = (type) => {\r\n    if (type === \"prev\") {\r\n      if (counter === 1) {\r\n        setCounter(1);\r\n      } else {\r\n        setCounter(counter - 1);\r\n      }\r\n    } else if (type === \"next\") {\r\n      if (numberOfButtons === counter) {\r\n        setCounter(counter);\r\n      } else {\r\n        setCounter(counter + 1);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"d-flex justify-content-center\">\r\n      <nav aria-label=\"Page navigation example\">\r\n        <ul class=\"pagination\">\r\n          <li class=\"page-item\">\r\n            <a\r\n              class=\"page-link\"\r\n              // href=\"!#\"\r\n              onClick={() => onButtonClick(\"prev\")}\r\n            >\r\n              Previous\r\n            </a>\r\n          </li>\r\n\r\n          {new Array(numberOfButtons).fill(\"\").map((el, index) => (\r\n            <li class={`page-item ${index + 1 === counter ? \"active\" : null}`}>\r\n              <a\r\n                class=\"page-link\"\r\n                // href=\"!#\"\r\n                onClick={() => setCounter(index + 1)}\r\n              >\r\n                {index + 1}\r\n              </a>\r\n            </li>\r\n          ))}\r\n          <li class=\"page-item\">\r\n            <a\r\n              class=\"page-link\"\r\n              // href=\"!#\"\r\n              onClick={() => onButtonClick(\"next\")}\r\n            >\r\n              Next\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;"],"sourceRoot":""}
{"version":3,"sources":["constant.js","views/faq/updateFaq.js"],"names":["baseUrl","img_url","UpdateFaq","history","useHistory","id","useParams","useState","question","answer","created_by","addreply","setAddReply","email","name","user","setUser","status","useEffect","loadData","a","axios","get","CONSTANT","then","res","console","log","data","catch","err","warn","onInputChange","e","target","value","onSubmit","preventDefault","_id","put","toast","message","setTimeout","push","alert","className","type","placeholder","onChange"],"mappings":"6KAAA,oEAAO,IAAMA,EAAW,yBAGXC,EAAU,2B,4KCuGRC,UAhGG,WAChB,IAAIC,EAAUC,cACNC,EAAOC,cAAPD,GACR,EAAgCE,mBAAS,CACvCC,SAAU,GACVC,OAAQ,GACRC,WAAY,KAHd,mBAAOC,EAAP,KAAiBC,EAAjB,KAKA,EAAwBL,mBAAS,CAC/BM,MAAO,oBACPC,KAAM,SAFR,mBAAOC,EAAP,KAAaC,EAAb,KAMQR,EAAyCG,EAAzCH,SAAUC,EAA+BE,EAA/BF,OAA+BE,EAAvBD,WAAuBC,EAAXM,OACtCC,qBAAU,WACRC,MACC,IACH,IAAMA,EAAQ,uCAAG,sBAAAC,EAAA,sEACTC,IAAMC,IAAN,UAAaC,IAAb,kCAAuDlB,IAAMmB,MAAK,SAACC,GACvEC,QAAQC,IAAI,WAAYF,EAAIG,KAAKA,KAAKlB,YACtCE,EAAYa,EAAIG,KAAKA,MAClBH,EAAIG,KAAKA,KAAKlB,YACfM,EAAQS,EAAIG,KAAKA,KAAKlB,eAGvBmB,OAAM,SAAAC,GACPJ,QAAQK,KAAKD,MATA,2CAAH,qDAaRE,EAAgB,SAAAC,GACpBrB,EAAY,2BAAKD,GAAN,kBAAiBsB,EAAEC,OAAOpB,KAAOmB,EAAEC,OAAOC,UAGjDC,EAAQ,uCAAG,WAAMH,GAAN,iBAAAb,EAAA,6DACfa,EAAEI,iBAGIT,EAAO,CACTU,IAAK3B,EAAS2B,IACd7B,OAAQE,EAASF,OACjBQ,OAAQ,QAEVS,QAAQK,KAAK,WAAYH,GATZ,SAUKP,IAAMkB,IAAN,UAAahB,IAAb,yBAAsDK,GAV3D,OAUPH,EAVO,OAWbC,QAAQC,IAAIF,EAAIG,MAChBY,YAAMf,EAAIG,KAAKa,SACfC,YAAW,WAAcvC,EAAQwC,KAAK,UAAY,KAbrC,wBAebC,MAAM,iDAfO,4CAAH,sDAkBd,OACE,sBAAKC,UAAU,YAAf,UACE,sBAAKA,UAAU,0BAAf,UACE,oBAAIA,UAAU,mBAAd,2BACA,uBAAMT,SAAU,SAAAH,GAAC,OAAIG,EAASH,IAA9B,UAEE,qBAAKY,UAAU,aAAf,SACA,qBAAIA,UAAU,aAAd,wBAAuC9B,EAAKD,UAE5C,qBAAK+B,UAAU,aAAf,SACA,qBAAIA,UAAU,aAAd,oBAAmC9B,EAAKF,WAExC,sBAAKgC,UAAU,aAAf,UACE,8CACA,uBACEC,KAAK,OACLD,UAAU,+BACVE,YAAY,6BACZjC,KAAK,WACLqB,MAAO3B,EACPwC,SAAU,SAAAf,GAAC,OAAID,EAAcC,SAGjC,sBAAKY,UAAU,aAAf,UACE,4CACA,uBACEC,KAAK,OACLD,UAAU,+BACVE,YAAY,yBACZjC,KAAK,SACLqB,MAAO1B,EACPuC,SAAU,SAAAf,GAAC,OAAID,EAAcC,SAGjC,wBAAQY,UAAU,4BAAlB,0BAIJ,cAAC,IAAD","file":"static/js/35.02c4754a.chunk.js","sourcesContent":["export const baseUrl  = \"http://3.12.65.48:4001\"\r\n// export const baseUrl  = \"http://localhost:4001\"\r\n// export const img_url = \"http://localhost:4001/\"\r\nexport const img_url = \"http://3.12.65.48:4001/\"\r\nexport const CONSTANT_NUMBER_2 = 'hello I am also a constant';\r\nexport const sample_file = 'http://3.12.65.48:4001/src/assets/samplesheet.xlsx'","import React, { useState, useEffect } from \"react\";\r\nimport axios from 'axios'\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport *as  CONSTANT from '../../constant'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { Button, Table } from 'react-bootstrap'\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\nconst UpdateFaq = () => {\r\n  let history = useHistory();\r\n  const { id } = useParams();\r\n  const [addreply, setAddReply] = useState({\r\n    question: \"\",\r\n    answer: \"\",\r\n    created_by: {}\r\n  });\r\n  const [user, setUser] = useState({\r\n    email: \"example@gmail.com\",\r\n    name: \"user\",\r\n  });\r\n\r\n\r\n  const { question, answer, created_by, status } = addreply;\r\n  useEffect(() => {\r\n    loadData()\r\n  }, []);\r\n  const loadData = async () => {\r\n    await axios.get(`${CONSTANT.baseUrl}/api/admin/get-faq?_id=${id}`).then((res) => {\r\n      console.log(\"response\", res.data.data.created_by)\r\n      setAddReply(res.data.data);\r\n      if(res.data.data.created_by){\r\n        setUser(res.data.data.created_by)\r\n      }\r\n      \r\n    }).catch(err => {\r\n      console.warn(err)\r\n    })\r\n\r\n  };\r\n  const onInputChange = e => {\r\n    setAddReply({ ...addreply, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    // console.warn(\"options\",questions, options)\r\n    if (true) {\r\n      let data = {\r\n        _id: addreply._id,\r\n        answer: addreply.answer,\r\n        status: \"done\"\r\n      }\r\n      console.warn(\"onsumbit\", data)\r\n      const res = await axios.put(`${CONSTANT.baseUrl}/api/admin/update-faq`, data);\r\n      console.log(res.data)\r\n      toast(res.data.message);\r\n      setTimeout(function () { history.push(\"/faq\"); }, 1000);\r\n    } else {\r\n      alert(\"please select any subcategory and chaptermeta\")\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"w-75 mx-auto shadow p-5\">\r\n        <h2 className=\"text-center mb-4\">Reply to User</h2>\r\n        <form onSubmit={e => onSubmit(e)}>\r\n       \r\n          <div className=\"form-group\">\r\n          <h4 className=\"form-group\">User Name :{user.name}</h4>\r\n          </div>\r\n          <div className=\"form-group\">\r\n          <h4 className=\"form-group\">Email :{user.email}</h4>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label> Question</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter question description\"\r\n              name=\"question\"\r\n              value={question}\r\n              onChange={e => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label> Answer</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter info description\"\r\n              name=\"answer\"\r\n              value={answer}\r\n              onChange={e => onInputChange(e)}\r\n            />\r\n          </div>\r\n          <button className=\"btn btn-primary btn-block\">Submit</button>\r\n        </form>\r\n\r\n      </div>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateFaq;"],"sourceRoot":""}
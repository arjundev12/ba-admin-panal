{"version":3,"sources":["views/Customers/invoice.js","constant.js"],"names":["InvoiceAdd","id","useParams","history","useHistory","Date","useState","startDate","setStartDate","endDate","setEndDate","useEffect","loadData","tableRow","recurrForm","tax_rego_no","cst_reg_no","pan_no","apply_tds_customer","preferred_payment_method","preferred_delivery_method","term","oppning_balance","as_of_date","is_sub_customer","name","first_name","middle_name","last_name","suffix","company_name","display_name","gst_registration_type","gstin_no","email","number","mobile_no","fax","other","website","Shipping_Address_copy","notes","customer_id","bill_with","formData","setFormData","b_street","b_city","b_state","b_pin","b_country","s_street","s_city","s_state","s_pin","s_country","address","setAddress","sent_later","customer","setCustomer","label","value","product","taxInfo1Gst","taxInfo1Igst","a","axios","get","CONSTANT","localStorage","getItem","response0","console","log","data","code","toast","invoice_no","setFormData1","formData1","invoice_number","response1","iterator","push","response","billing_address","street","city","state","pin","country","shipping_address","unshift","moment","format","gstTaxAmount","setGstTaxAmount","onInputChangeDate","e","target","add","onInputChange","handleFormValidation","checkInvoiceValidation","Number","obj","find","element","_id","formErrors","setFormErrors","invoice_number_error","emailErr","formIsValid","mobPattern","RegExp","test","post","filepath","setFilepath","onSetFile","warn","files","FormData","append","res","message","invoice_type","total","subtotal","balance_due","rowInput","service_date","product_service","description","qty","rate","amount","tax","setTableRow","onInputChangeTable","i","type","discription","price","reduce","accumulator","current","calculatSum","addOrders","setAddOrders","paymentInput","paymentTerm","setPaymentTerm","opneAddorderModal","day_number","interval_time","day_name","day_no","every_day","every_week","every_months","start_date","month_name","setRecurrForn","onInputChangeInterval","onSubmit","preventDefault","interval","created_by","invoice_date","due_date","invoice_message","statement_message","attachments","products_meta","recurring_interval","lang","http-equiv","content","charset","href","rel","crossorigin","class","src","onclick","data-tooltip","onChange","map","item","disabled","placeholder","for","pattern","inputmode","onClick","rows","style","color","paddingBottom","border","cellspacing","className","options","method","action","show","Header","closeButton","Title","data-dismiss","Group","as","Col","controlId","Label","Control","variant","Footer","baseUrl"],"mappings":"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","file":"static/js/16.ab2afdb4.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Select from 'react-select';\r\nimport *as  CONSTANT from '../../constant'\r\nimport '../../css/style.css'\r\nimport image from '../../assets/download.png'\r\nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\r\nimport moment from \"moment\";\r\nimport { Button, Row, Col, Form, Table, DropdownButton, Dropdown, Modal, Tabs, Tab, Sonnet } from 'react-bootstrap'\r\nimport { types } from \"@babel/core\";\r\n\r\nconst InvoiceAdd = () => {\r\n    const { id } = useParams();\r\n    let history = useHistory();\r\n    var someDate = new Date();\r\n    const [startDate, setStartDate] = useState()\r\n    const [endDate, setEndDate] = useState()\r\n    useEffect(() => {\r\n        loadData(id)\r\n    }, [tableRow, recurrForm])\r\n    const [textInfo, setTexInfo] = useState({\r\n        tax_rego_no: \"\",\r\n        cst_reg_no: \"\",\r\n        pan_no: \"\",\r\n        apply_tds_customer: false\r\n\r\n    })\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState({\r\n        preferred_payment_method: \"\",\r\n        preferred_delivery_method: \"\",\r\n        term: \"\",\r\n        oppning_balance: \"\",\r\n        as_of_date: \"\"\r\n\r\n    })\r\n    const [formData, setFormData] = useState({\r\n        is_sub_customer: false,\r\n        name: \"\",\r\n        first_name: \"\",\r\n        middle_name: \"\",\r\n        last_name: \"\",\r\n        suffix: \"\",\r\n        company_name: \"\",\r\n        display_name: \"\",\r\n        gst_registration_type: \"\",\r\n        gstin_no: \"\",\r\n        email: \"\",\r\n        number: \"\",\r\n        mobile_no: \"\",\r\n        fax: \"\",\r\n        other: \"\",\r\n        website: \"\",\r\n        Shipping_Address_copy: false,\r\n        notes: \"\",\r\n        customer_id: \"\",\r\n        bill_with: \"\",\r\n        // sent_later: \"no\",\r\n        // invoice_number: \"\",\r\n        // invoice_type: \"basic_invoice\",\r\n        // total: 0,\r\n        // subtotal: 0,\r\n        // balance_due: 0\r\n    })\r\n\r\n    const [address, setAddress] = useState({\r\n        b_street: \"\",\r\n        b_city: \"\",\r\n        b_state: \"\",\r\n        b_pin: \"\",\r\n        b_country: \"\",\r\n        s_street: \"\",\r\n        s_city: \"\",\r\n        s_state: \"\",\r\n        s_pin: \"\",\r\n        s_country: \"\"\r\n    })\r\n\r\n    const { is_sub_customer, name, first_name, middle_name, last_name, suffix, company_name, display_name, gst_registration_type\r\n        , gstin_no, email, number, mobile_no, fax, other, website, Shipping_Address_copy, notes, sent_later } = formData\r\n\r\n    const { b_street, b_city, b_state, b_pin, b_country, s_street, s_city, s_state, s_pin, s_country } = address\r\n    // const { tax_rego_no, cst_reg_no, pan_no, apply_tds_customer } = textInfo\r\n\r\n\r\n    const [customer, setCustomer] = useState([])\r\n    const [product, setProduct] = useState([{ label: \"Add Product\", value: \"Add Product\" }])\r\n    const [taxInfo1Gst, setTaxInfo1Gst] = useState([{ label: \"18% Gst\", value: \"18% Gst\" },\r\n    { label: \"6% Gst\", value: \"6% Gst\" },\r\n    { label: \"12% Gst\", value: \"12% Gst\" }])\r\n    const [taxInfo1Igst, setTaxInfo1Igst] = useState([{ label: \"18% Igst\", value: \"18% Igst\" },\r\n    { label: \"6% Igst\", value: \"6% Igst\" },\r\n    { label: \"12% Igst\", value: \"12% Igst\" }])\r\n    const loadData = async (id) => {\r\n        let response0 = await axios.get(`${CONSTANT.baseUrl}/api/admin/get-customer?_id=${localStorage.getItem('subadminid')}`);\r\n        console.log(\"responsedayaa\", response0)\r\n        if (response0.data.code == 200) {\r\n            toast(\"Add successfully\");\r\n            setCustomer(response0.data.data)\r\n        }\r\n        let invoice_no = await axios.get(`${CONSTANT.baseUrl}/api/admin/get-invoice-no`);\r\n        console.log(\"invoice_no\", invoice_no)\r\n        if (invoice_no.data.code == 200) {\r\n            toast(\"Add successfully\");\r\n            setFormData1({ ...formData1, invoice_number: invoice_no.data.data })\r\n        }\r\n        let response1 = await axios.get(`${CONSTANT.baseUrl}/api/admin/get-product-service?_id=${localStorage.getItem('subadminid')}`);\r\n        console.log(\"product\", response1)\r\n        if (response1.data.code == 200) {\r\n            toast(\"Add successfully\");\r\n            for (const iterator of response1.data.data) {\r\n                product.push({ label: iterator.name, value: iterator })\r\n\r\n            }\r\n            // setProduct(response1.data.data)\r\n        }\r\n        let response = await axios.get(`${CONSTANT.baseUrl}/api/admin/customer-details/${id}`);\r\n        console.log(\"response\", response.data.data)\r\n        if (response.data.code == 200) {\r\n            toast(\"Add successfully\");\r\n            await setFormData(response.data.data)\r\n            await setAddress({\r\n                b_street: response.data.data.billing_address.street,\r\n                b_city: response.data.data.billing_address.city,\r\n                b_state: response.data.data.billing_address.state,\r\n                b_pin: response.data.data.billing_address.pin,\r\n                b_country: response.data.data.billing_address.country,\r\n                s_street: response.data.data.shipping_address.street,\r\n                s_city: response.data.data.shipping_address.city,\r\n                s_state: response.data.data.shipping_address.state,\r\n                s_pin: response.data.data.shipping_address.pin,\r\n                s_country: response.data.data.shipping_address.country\r\n            })\r\n            await customer.unshift(response.data.data)\r\n            // await setTexInfo(response.data.data.tax_info)\r\n            // await setPaymentMethod(response.data.data.payment_and_billing)\r\n            await setStartDate(moment().format(\"YYYY-MM-DD\"))\r\n            // let nedate =moment(startDate).add(5, 'days')\r\n            await setEndDate(moment().format(\"YYYY-MM-DD\"))\r\n        } else {\r\n            console.log(\"response\", response)\r\n        }\r\n\r\n        console.log(\"customercustomercustomer\", customer, invoice_number)\r\n    }\r\n    const onInputChangeAddress = async (e) => {\r\n        console.log(\"targat\", e.target.name, e.target.value)\r\n        setAddress({ ...address, [e.target.name]: e.target.value });\r\n    }\r\n    const [gstTaxAmount, setGstTaxAmount] = useState('true')\r\n    const onInputChangeDate = async (e) => {\r\n        if (e.target.value == 'due_on_receipt') {\r\n            setEndDate(startDate)\r\n        }\r\n        if (e.target.value == 'net_15') {\r\n            setEndDate(moment(startDate).add(15, 'days').format(\"YYYY-MM-DD\"))\r\n        }\r\n        if (e.target.value == 'net_30') {\r\n            setEndDate(moment(startDate).add(30, 'days').format(\"YYYY-MM-DD\"))\r\n        }\r\n        if (e.target.value == 'net_60') {\r\n            setEndDate(moment(startDate).add(60, 'days').format(\"YYYY-MM-DD\"))\r\n        }\r\n        if (e.target.name == 'amounts_are') {\r\n            console.log('e.target.amounts_are', e.target.name, typeof e.target.value)\r\n            setGstTaxAmount(e.target.value)\r\n        }\r\n    }\r\n    const onInputChange = async (e) => {\r\n        console.log(\"formData\", formData)\r\n        console.log(\"targat\", e.target.name, e.target.value)\r\n        if (e.target.name == 'email') {\r\n            handleFormValidation()\r\n            setFormData({ ...formData, [e.target.name]: e.target.value })\r\n        }\r\n        if (e.target.name == 'sent_later') {\r\n            setFormData({ ...formData, [e.target.name]: \"yes\" })\r\n        }\r\n        if (e.target.name == 'invoice_type') {\r\n            setFormData1({ ...formData1, [e.target.name]: \"recurring_invoice\" })\r\n        }\r\n        if (e.target.name == 'invoice_number') {\r\n            setFormData1({ ...formData1, [e.target.name]: e.target.value })\r\n\r\n            checkInvoiceValidation(Number(e.target.value))\r\n            console.log(\"dddddddddd\", [e.target.name], e.target.value)\r\n        }\r\n        if (e.target.name == 'customer_id') {\r\n            console.log(\"targat\", e.target.value)\r\n\r\n            let obj = customer.find(element => element._id == e.target.value);\r\n            setFormData({ ...formData, first_name: obj.first_name })\r\n            console.log(\"customer\", obj)\r\n            loadData(e.target.value)\r\n        } else {\r\n            setFormData({ ...formData, [e.target.name]: e.target.value })\r\n\r\n        }\r\n\r\n    };\r\n    const [formErrors, setFormErrors] = useState({});\r\n    const { emailErr, invoice_number_error } = formErrors\r\n    const checkInvoiceValidation = async (number) => {\r\n        console.log(\"checkInvoiceValidation\",typeof number, number, (number === 0))\r\n        let formErrors = {};\r\n        let formIsValid = true;\r\n        if (number) {\r\n            console.log(\"checkInvoiceValidation\",typeof number, number)\r\n            var mobPattern = new RegExp(/^[0-9]{4,4}$/i);\r\n            console.log(\"invoice_no\", mobPattern.test(number) , number)\r\n            if (!mobPattern.test(number)) {\r\n                formIsValid = false;\r\n                formErrors[\"invoice_number_error\"] = \"Please enter valid1111 number \";\r\n            }\r\n            let invoice_no = await axios.post(`${CONSTANT.baseUrl}/api/admin/check-invoice-no`,{invoice_number:number});\r\n            console.log(\"invoice_no\", invoice_no)\r\n            if (invoice_no.data.code == 400) {\r\n                 console.log(\"invoice_no\", invoice_no.data)\r\n                formIsValid = false;\r\n                formErrors[\"invoice_number_error\"] = \"this number is already exist\";\r\n            }\r\n\r\n            // if(invoice_no.data.code == 422){\r\n            //     formErrors[\"invoice_number_error\"] =  invoice_no.data.errors[0].error_msg\r\n            // }\r\n\r\n        }\r\n        \r\n        setFormErrors(formErrors);\r\n        console.log(\"hiiiiiiiiiiiiiiii\", formErrors, formIsValid)\r\n        return formIsValid;\r\n    }\r\n    const handleFormValidation = async () => {\r\n        let formErrors = {};\r\n        let formIsValid = true;\r\n        //price number    \r\n        if (!email && email == \"\") {\r\n            formIsValid = false;\r\n            formErrors[\"emailErr\"] = \"email is required.\";\r\n        } else if (email) {\r\n            var mobPattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n            if (!mobPattern.test(email)) {\r\n                formIsValid = false;\r\n                formErrors[\"emailErr\"] = \"Please enter valid email address.\";\r\n            }\r\n        }\r\n        setFormErrors(formErrors);\r\n        return formIsValid;\r\n    }\r\n\r\n    const [region, setRegion] = useState();\r\n    const selectRegion = async (val) => {\r\n        console.log(\"region\", val)\r\n        await setRegion(val);\r\n    }\r\n\r\n    //////////////////////////////file Attachement ////////////////////////////////////////\r\n    const [filepath, setFilepath] = useState();\r\n    const onSetFile = async e => {\r\n        console.warn(\"............image....\", [e.target.name], e.target.files[0])\r\n        const formData = new FormData();\r\n        formData.append(\r\n            \"file\",\r\n            e.target.files[0],\r\n        );\r\n        console.warn(\"file\", formData)\r\n        const res = await axios.post(`${CONSTANT.baseUrl}/api/admin/uploade-doc`, formData, { \"Content-Type\": \"multipart/form-data\" });\r\n        console.log(\"response\", res.data)\r\n        if (res.data.code == 200) {\r\n            setFilepath(res.data.data)\r\n        } else {\r\n            console.warn(\"error\", res.data.message)\r\n        }\r\n        // console.log(\"filepath\", filepath)\r\n    }\r\n    ///////////////////////////////Manege Table////////////////////////////\r\n    const [formData1, setFormData1] = useState({\r\n        sent_later: \"no\",\r\n        invoice_number: \"\",\r\n        invoice_type: \"basic_invoice\",\r\n        total: 0,\r\n        subtotal: 0,\r\n        balance_due: 0\r\n    })\r\n    const { total, subtotal, balance_due, invoice_number, invoice_type, } = formData1\r\n    const rowInput = {\r\n        id: \"\",\r\n        service_date: \"\",\r\n        product_service: \"\",\r\n        description: \"\",\r\n        qty: \"\",\r\n        rate: \"\",\r\n        amount: 0,\r\n        tax: \"\"\r\n    }\r\n    // const {service_date,product_service,description,qty,rate,amount,tax}=rowInput\r\n    const [tableRow, setTableRow] = useState([{ ...rowInput }]);\r\n    const onInputChangeTable = async (e, i, type) => {\r\n        //    console.log(\"onInputChangeTable\", e.target.name, e.target.value, e.label)\r\n        if (type == 'product_service') {\r\n            console.log(\"e.label\", e.label,)\r\n            console.log(\"e.value\", e.value)\r\n            if (e.label == 'Add Product') {\r\n                // console.log(\"adddpppppppppppppppppp\")\r\n                history.push(\"/master-product\");\r\n            } else {\r\n                tableRow[i]['product_service'] = e.value.name\r\n                tableRow[i]['description'] = e.value.discription\r\n                tableRow[i]['amount'] = e.value.price\r\n                tableRow[i]['tax'] = e.value.tax\r\n                // tableRow[i]['description'] = e.value.name\r\n            }\r\n        } else if (type == 'tax') {\r\n            tableRow[i]['tax'] = e.value.name\r\n        } else {\r\n            if ('amount' == e.target.name) {\r\n                tableRow[i][e.target.name] = Number(e.target.value)\r\n            } else {\r\n                tableRow[i][e.target.name] = e.target.value\r\n            }\r\n\r\n        }\r\n        let calculatSum = await tableRow.reduce((accumulator, current) => accumulator + current.amount, 0)\r\n        console.log(\"tableRow\", tableRow)\r\n\r\n        await setFormData1({ ...formData1, total: calculatSum })\r\n\r\n        //   await  setFormData1({...formData1, subtotal: calculatSum})\r\n        //   await  setFormData1({...formData1, balance_due: calculatSum})\r\n\r\n    }\r\n    const addLineHandler = () => {\r\n        console.log(\"AddLine Handler called\")\r\n        setTableRow([...tableRow, { ...rowInput }])\r\n    }\r\n    const clearAllLine = () => {\r\n        setTableRow([rowInput])\r\n    }\r\n    ////////////////////////////////////////////////add orders  //////////////////////////////////////\r\n\r\n    const [addOrders, setAddOrders] = useState(false)\r\n    const paymentInput = {\r\n        term: \"\"\r\n    }\r\n    const [paymentTerm, setPaymentTerm] = useState([{ ...paymentInput }])\r\n    const addTermHandler = (e) => {\r\n        setPaymentTerm([...paymentTerm, { ...paymentInput }])\r\n    }\r\n    const clearTermAllLine = (e) => {\r\n        setPaymentTerm([paymentInput])\r\n    }\r\n    const opneAddorderModal = async (e) => {\r\n        e.target.value == 'false' ? await setAddOrders(false) : await setAddOrders(true)\r\n    }\r\n    //////////////////////////////////////////recurring///////////////////////////////////////////////////////////////////// \r\n\r\n    var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    var day_number = [\"1st\", \"2nd\", \"3rd\", \"4th\", \"5th\", \"6th\", \"7th\", \"8th\", \"9th\", \"10th\", \"11th\", \"12th\", \"13th\",\r\n        \"14th\", \"15th\", \"16th\", \"17th\", \"18th\", \"19th\", \"20th\", \"21st\", \"22nd\", \"23rd\", \"24th\", \"25th\", \"26th\", \"27th\", \"28th\", \"last\"];\r\n    const [recurrForm, setRecurrForn] = useState({\r\n        interval_time: \"Daily\",\r\n        day_name: \"\",\r\n        day_no: \"Day\",\r\n        every_day: \"\",\r\n        every_week: \"\",\r\n        every_months: \"\",\r\n        start_date: \"\",\r\n        month_name: \"\"\r\n    })\r\n    const { interval_time, day_name, day_no, start_date, every_day, every_week, month_name, every_months } = recurrForm\r\n    const onInputChangeInterval = async (e) => {\r\n        console.log(\"e.target.name\", e.target.name, e.target.value)\r\n        setRecurrForn({ ...recurrForm, [e.target.name]: e.target.value })\r\n        console.log(\"e.target.namenamename\", interval_time, day_name, day_no, start_date)\r\n    }\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        let data = {}\r\n        console.log(\"daaaaaaa\", id, formData1, formData, tableRow, recurrForm)\r\n        let interval = invoice_type == 'basic_invoice' ? {\r\n            interval_time: \"\", day_name: \"\", day_no: \"\", every_day: \"\", every_week: \"\", every_months: \"\", start_date: \"\", month_name: \"\"\r\n        } : recurrForm\r\n        data = {\r\n            customer_id: id,\r\n            created_by: localStorage.getItem('subadminid'),\r\n            invoice_number: invoice_number,\r\n            invoice_type: invoice_type,\r\n            invoice_date: startDate,\r\n            due_date: endDate,\r\n            total: total,\r\n            subtotal: subtotal,\r\n            balance_due: balance_due,\r\n            invoice_message: formData.invoice_message,\r\n            statement_message: formData.statement_message,\r\n            attachments: filepath,\r\n            products_meta: tableRow,\r\n            recurring_interval: interval\r\n        }\r\n        console.log(\"daaaaaaa\", data)\r\n        let response = await axios.post(`${CONSTANT.baseUrl}/api/admin/create-invoice`, data);\r\n        console.log(\"response\", response)\r\n        if (response.data.code == 200) {\r\n            toast(\"create successfully\");\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            {/* <!DOCTYPE html> */}\r\n\r\n            <html lang=\"en\">\r\n                <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8\" />\r\n                <head>\r\n                    <meta charset=\"utf-8\" />\r\n                    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n                    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n                    <meta name=\"description\" content=\"\" />\r\n                    <meta name=\"author\" content=\"\" />\r\n                    <meta name=\"keyword\" content=\"\" />\r\n                    <title>Winklix Internet</title>\r\n                    {/* <!-- Icons --> */}\r\n                    <link href=\"css/font-awesome.min.css\" rel=\"stylesheet\" />\r\n                    <link href=\"https://fonts.googleapis.com/css?family=Poppins:100,200,300,400,500,700,800\" rel=\"stylesheet\" />\r\n                    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\r\n                    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\r\n                    <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700;900&display=swap\" rel=\"stylesheet\" />\r\n                    {/* <!-- Main styles for this application --/> */}\r\n                    <link href=\"css/style.css\" rel=\"stylesheet\" />\r\n                    <link href=\"css/custom.css\" rel=\"stylesheet\" />\r\n                    {/* <!-- Styles required by this views --> */}\r\n                </head>\r\n                <body class=\"invoice-body\">\r\n                    <section class=\"header-invoice\">\r\n                        <div class=\"container-fluid\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-4 col-sm-4\">\r\n                                    <div class=\"left-portion\">\r\n                                        <h2><img src=\"img/wall-clock.png\" /> Invoice</h2>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-8 col-sm-8\">\r\n                                    <div class=\"right-portion\">\r\n                                        <ul>\r\n                                            <li><a href=\"javascript:void(0)\" onclick=\"openNav()\"><i class=\"fa fa-bars\"></i></a></li>\r\n                                            <li><a href=\"#\"><img src=\"img/help.png\" /> Help</a></li>\r\n                                            <li><a href=\"#\"><img src=\"img/settings.png\" /> </a></li>\r\n                                        </ul>\r\n                                        <div id=\"mySidenav1\" class=\"sidenav1\">\r\n                                            <a href=\"javascript:void(0)\" class=\"Close\" onclick=\"closeNav()\">&times;</a>\r\n                                            <h2 class=\"cust-invoice\">Add to Invoice</h2>\r\n                                            <form class=\"cust-form\">\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"form-group col-sm-12 cust-width3\">\r\n                                                        <label>Customerll <i class=\"fa fa-question-circle-o\"></i></label>\r\n                                                        <select class=\"form-control\">\r\n                                                            <option>Select a Customer</option>\r\n                                                            <option>A</option>\r\n                                                            <option>B</option>\r\n                                                            <option>C</option>\r\n                                                        </select>\r\n                                                    </div>\r\n\r\n                                                    <a class=\"add-all\" href=\"#\">Add all</a>\r\n                                                    <div class=\"box-card\">\r\n                                                        <h3>Estimate #1045</h3>\r\n                                                        <p>Nov 27, 2020</p>\r\n                                                        <h3>₹4,36,600.00 | Taxable</h3>\r\n                                                        <ul>\r\n                                                            <li>More App & Software...</li>\r\n                                                            <li>Software Development a...</li>\r\n                                                        </ul>\r\n                                                        <a class=\"more\" href=\"#\">More</a>\r\n                                                        <a class=\"add-btn\" href=\"#\">add</a>\r\n                                                        <a class=\"open-btn\" href=\"#\">open</a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                    <section class=\"custom-box\">\r\n                        <div class=\"container-fluid\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-8 col-sm-8\">\r\n                                    <div class=\"custom\">\r\n                                        <form>\r\n                                            <div class=\"row\">\r\n                                                <div class=\"form-group col-sm-4 cust-width\">\r\n                                                    <label>Customer  </label>\r\n                                                    <p><a href=\"#\" data-tooltip=\"Select a Custom to Make SUre The Right Person Pays You On Time\"><i class=\"fa fa-question-circle-o\"></i></a></p>\r\n                                                    {/* <!--  <div class=\"tool-box\">\r\n                              <div class=\"tooltips\">\r\n                                 <h2>Select a Customer to Make Sure The Right\r\n                                      Person Pays You On Time</h2>\r\n                              </div>\r\n                           </div> --> */}\r\n                                                    <select class=\"form-control\" name=\"customer_id\"\r\n                                                        onChange={e => onInputChange(e)} >\r\n                                                        {customer.map(item => (\r\n                                                            <option value={item._id}>{item.first_name}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                </div>\r\n\r\n                                                <div class=\"form-group col-sm-4 cust-width\">\r\n                                                    <div class=\"separate-box\">\r\n                                                        <label>Customer Email</label>\r\n                                                        <p><a href=\"#\" data-tooltip=\"You Can Send to More Than One Address By Separating Emails With a Comma \"><i class=\"fa fa-question-circle-o\"></i></a></p>\r\n                                                        <input type=\"text\" name=\"email\" disabled=\"disabled\" value={email} class=\"form-control\" placeholder=\"Separate emails with a comma\" onChange={e => onInputChange(e)} />\r\n                                                        <div class=\"form-group sent\">\r\n\r\n                                                            <label><input type=\"checkbox\" id=\"html\" name='sent_later' value={sent_later} onChange={e => onInputChange(e)} />  Sent Later</label>\r\n                                                            <p><a href=\"#\" data-tooltip=\"You Can Send Later From The All Sales List. Filter By Delivery Method>Send Later.\"><i class=\"fa fa-question-circle-o\"></i></a></p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"form-group col-sm-4\">\r\n                                                    <a href=\"#\">Setup now</a>\r\n                                                    <div class=\"form-group\">\r\n                                                        <input type=\"checkbox\" id=\"html\" />\r\n                                                        <label for=\"html\">razorpay </label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            {invoice_type == 'recurring_invoice' ? <div class=\"row\">\r\n                                                <div class=\"form-group col-sm-4\">\r\n                                                    <label>Interval </label>\r\n                                                    <select class=\"form-control\" name='interval_time' value={interval_time} onChange={e => onInputChangeInterval(e)}>\r\n                                                        <option value='Daily'>Daily</option>\r\n                                                        <option value='Weekly'>Weekly</option>\r\n                                                        <option value='Monthly'>Monthly</option>\r\n                                                        <option value='Yearly'>Yearly</option>\r\n                                                    </select>\r\n                                                    {interval_time == 'Daily' ?\r\n                                                        <label>  Every <input type=\"number\" name='every_day' pattern=\"[0-9]*\" inputmode=\"numeric\" onChange={e => onInputChangeInterval(e)} /> day(s)</label>\r\n                                                        : interval_time == 'Weekly' ?\r\n                                                            <div> <label>  Every <input type=\"number\" name='every_week' pattern=\"[0-9]*\" inputmode=\"numeric\" onChange={e => onInputChangeInterval(e)} /> week(s) on</label>\r\n\r\n                                                                <div >\r\n                                                                    <select class=\"form-control\" name='day_name' onChange={e => onInputChangeInterval(e)}>\r\n                                                                        <option value='Sunday'>Sunday</option>\r\n                                                                        <option value='Monday'>Monday</option>\r\n                                                                        <option value='Tuesday'>Tuesday</option>\r\n                                                                        <option value='Wednesday'>Wednesday</option>\r\n                                                                        <option value='Thursday'>Thursday</option>\r\n                                                                        <option value='Friday'>Friday</option>\r\n                                                                        <option value='Saturday'>Saturday</option>\r\n                                                                    </select>\r\n                                                                </div>\r\n                                                            </div> : interval_time == 'Monthly' ? <div>\r\n                                                                <div >\r\n                                                                    <select class=\"form-control\" name='day_no' onChange={e => onInputChangeInterval(e)}>\r\n                                                                        <option value='Day'>Day</option>\r\n                                                                        <option value='First'>First</option>\r\n                                                                        <option value='Second'>Second</option>\r\n                                                                        <option value='Third'>Third</option>\r\n                                                                        <option value='Fourth'>Fourth</option>\r\n                                                                        <option value='Last'>Last</option>\r\n                                                                        <option value='Third'>Third</option>\r\n                                                                    </select>\r\n                                                                </div>\r\n\r\n                                                                {day_no == 'Day' ? <div >\r\n                                                                    <select class=\"form-control\" name='day_name' onChange={e => onInputChangeInterval(e)}>\r\n                                                                        {day_number.map((item, i) => <option>{item}</option>)}\r\n\r\n                                                                    </select>\r\n                                                                </div> : <div >\r\n                                                                    <select class=\"form-control\" name='day_name' onChange={e => onInputChangeInterval(e)}>\r\n                                                                        <option value='Sunday'>Sunday</option>\r\n                                                                        <option value='Monday'>Monday</option>\r\n                                                                        <option value='Tuesday'>Tuesday</option>\r\n                                                                        <option value='Wednesday'>Wednesday</option>\r\n                                                                        <option value='Thursday'>Thursday</option>\r\n                                                                        <option value='Friday'>Friday</option>\r\n                                                                        <option value='Saturday'>Saturday</option>\r\n                                                                    </select>\r\n                                                                </div>}\r\n\r\n                                                                <label>  Every of <input type=\"number\" name='every_months' pattern=\"[0-9]*\" inputmode=\"numeric\" onChange={e => onInputChangeInterval(e)} /> month(s)</label>\r\n\r\n                                                            </div> : <div>\r\n                                                                <label>Every</label>\r\n                                                                <select class=\"form-control\" name='month_name' onChange={e => onInputChangeInterval(e)}>\r\n                                                                    {months.map((item, i) => <option>{item}</option>)}\r\n                                                                </select>\r\n                                                                <select class=\"form-control\" name='day_name' onChange={e => onInputChangeInterval(e)}>\r\n                                                                    {day_number.map((item, i) => <option>{item}</option>)}\r\n\r\n                                                                </select>\r\n                                                            </div>}\r\n                                                    {/* <div class=\"form-group col-sm-4\">\r\n                                                        <select class=\"form-control\" name='day_name' onChange={e => onInputChangeInterval(e)}>\r\n                                                            <option value='Day'>Day</option>\r\n                                                            <option value='First'>First</option>\r\n                                                            <option value='Second'>Second</option>\r\n                                                            <option value='Third'>Third</option>\r\n                                                            <option value='Fourth'>Fourth</option>\r\n                                                            <option value='Last'>Last</option>\r\n                                                            <option value='Third'>Third</option>\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    <div class=\"form-group col-sm-4\">\r\n                                                        <select class=\"form-control\" name='day_no' onChange={e => onInputChangeInterval(e)}>\r\n                                                            <option>Sunday</option>\r\n                                                            <option>Monday</option>\r\n                                                            <option>Tuesday</option>\r\n                                                            <option>Wednesday</option>\r\n                                                            <option>Thursday</option>\r\n                                                            <option>Friday</option>\r\n                                                            <option>Saturday</option>\r\n                                                        </select>\r\n                                                    </div>\r\n\r\n                                                    <label>  Every of <input type=\"number\" name='every_months' pattern=\"[0-9]*\" inputmode=\"numeric\" onChange={e => onInputChangeInterval(e)} /> month(s)</label> */}\r\n\r\n\r\n                                                </div>\r\n\r\n                                                <div class=\"form-group col-sm-4\">\r\n                                                    <label for=\"\">Start Date</label>\r\n                                                    <input type=\"date\" name=\"start_date\" value={start_date} onChange={e => onInputChangeInterval(e)} />\r\n                                                </div>\r\n                                                <div class=\"form-group col-sm-4\">\r\n                                                    <label for=\"\">End</label>\r\n                                                    <select class=\"form-control\" name='end' onChange={e => onInputChangeInterval(e)}>\r\n                                                        <option value={'none'}>None</option>\r\n                                                        <option value={'by'}>By</option>\r\n                                                        <option value={'after'}>After</option>\r\n                                                    </select> </div>\r\n                                            </div> : \"\"}\r\n                                        </form>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div class=\"col-md-4 col-sm-4\">\r\n\r\n                                    <div class=\"custom-right\">\r\n                                        <p>BALANCE DUE</p>\r\n                                        <h2>₹0.00</h2>\r\n                                    </div>\r\n                                    <div class=\"custom-right\">\r\n                                        <button value={true} onClick={e => opneAddorderModal(e)} >add orders</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                    <section class=\"billing-address\">\r\n                        <div class=\"container-fluid\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-8 col-sm-8\">\r\n                                    <div class=\"flex-content\">\r\n                                        <div class=\"UserRight1\">\r\n                                            <form>\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"form-group col-sm-3\">\r\n                                                        <label>Billing Address</label>\r\n                                                        <textarea class=\"form-control\" disabled=\"disabled\" value={b_street} rows=\"5\" id=\"comment\"></textarea>\r\n                                                    </div>\r\n                                                    <div class=\"form-group col-sm-3 cust-width\">\r\n                                                        <label>Terms</label>\r\n                                                        {/*  */}\r\n                                                        <p><a href=\"#\" data-tooltip=\"Terms Show How Many Days A Customer Has to Pay.You Can Change This Number Before You Send The Invoice.\"><i class=\"fa fa-question-circle-o\"></i></a></p>\r\n                                                        <select class=\"form-control\" name=\"term\" onChange={e => onInputChangeDate(e)}>\r\n                                                            <option value={'due_on_receipt'}>Due on Receipt</option>\r\n                                                            <option value={'net_15'}>Net 15</option>\r\n                                                            <option value={'net_30'}>Net 30</option>\r\n                                                            <option value={'net_60'}>Net 60</option>\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    <div class=\"form-group col-sm-3 cust-width2\">\r\n                                                        <label for=\"\">Invoice Date</label>\r\n                                                        <input type=\"date\" name=\"startDate\" value={startDate} onChange={e => onInputChange(e)} />\r\n                                                    </div>\r\n                                                    <div class=\"form-group col-sm-3 cust-width2\">\r\n                                                        <label for=\"\">Due Date</label>\r\n                                                        <input type=\"date\" name=\"endDate\" value={endDate} onChange={e => onInputChange(e)} />\r\n                                                    </div>\r\n                                                    <div class=\"form-group col-sm-3 cust-width1\">\r\n                                                        <label>Place of Supply </label>\r\n                                                        <p><a href=\"#\" data-tooltip=\"You Can Send Later From The All Sales List. Filter By Delivery Method>Send Later.\"><i class=\"fa fa-question-circle-o\"></i></a></p>\r\n                                                        {/* <RegionDropdown\r\n                                                            class=\"form-control\"\r\n                                                            country={\"India\"}\r\n                                                            value={region}\r\n                                                            onChange={(val) => selectRegion(val)} /> */}\r\n                                                        <input type=\"text\" name=\"b_state\" disabled=\"disabled\" value={b_state} onChange={e => onInputChange(e)} />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-4 col-sm-4\">\r\n                                    <div class=\"invoice-box\">\r\n                                        <label>Invoice</label>\r\n                                        <input type=\"number\" name=\"invoice_number\" value={invoice_number} class=\"form-control\" placeholder=\"1001\" onChange={e => onInputChange(e)} />\r\n\r\n                                        {invoice_number_error &&\r\n                                            <div style={{ color: \"red\", paddingBottom: 10 }}>{invoice_number_error}</div>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                    <section class=\"exclusive-tax\">\r\n                        <div class=\"container-fluid\">\r\n                            <div class=\"row\">\r\n                                <div class=\"form-group col-sm-9\"></div>\r\n                                <div class=\"form-group col-sm-3 exclusive-right\">\r\n                                    <label class=\"tax\">Amounts are  </label>\r\n                                    <select class=\"form-control taxes1\" name=\"amounts_are\" onChange={e => onInputChangeDate(e)}>\r\n                                        <option value={true}>Exclusive of Tax</option>\r\n                                        <option value={true}>Inclusive of Tax</option>\r\n                                        <option value={false}>Out of Scope of Tax</option>\r\n                                    </select>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                    <section class=\"cone-table1\">\r\n                        <div class=\"container-fluid\">\r\n                            <div class=\"row clearfix\">\r\n                                <div class=\"col-md-12 column\">\r\n                                    <table border=\"1\" cellspacing=\"0\">\r\n                                        <tr>\r\n                                            {/* <th ><input class='check_all' type='checkbox' onclick=\"select_all()\" /></th> */}\r\n                                            {/* <button type=\"button\" class='delete'><i class=\"fa fa-trash\"></i>\r\n                                            </button>\r\n                                            <button type=\"button\" class='addmore'><i class=\"fa fa-plus-circle\"></i>\r\n                                            </button> */}\r\n                                            <th>#</th>\r\n                                            <th>Service Date</th>\r\n                                            <th>product/service <i class=\"fa fa-question-circle-o\"></i></th>\r\n                                            <th>HSN/SAC</th>\r\n                                            <th>description</th>\r\n                                            {gstTaxAmount == 'true' ? <th>Tax</th> : \"\"}\r\n                                            <th>qty</th>\r\n                                            <th>rate</th>\r\n                                            <th>amount</th>\r\n\r\n                                            {/* <th>Action</th> */}\r\n                                        </tr>\r\n                                        {tableRow && tableRow?.map((item, i) => <tr>\r\n                                            <td><span id='snum'>{i + 1}</span></td>\r\n                                            <input type=\"date\" name=\"service_date\" placeholder={moment().format(\"YYYY-MM-DD\")} onChange={e => onInputChange(e)} />\r\n                                            <td> <Select className=\"basic-single\" options={product}\r\n                                                onChange={e => onInputChangeTable(e, i, \"product_service\")} /></td>\r\n                                            <td>{\"\"}</td>\r\n                                            <td><input type='text' name='description' value={item.description} onChange={(e) => onInputChangeTable(e, i, \"\")} /></td>\r\n                                            {gstTaxAmount == 'true' ? <td> <Select className=\"basic-single\" value={item.tax} options={localStorage.getItem('state') == b_state ? taxInfo1Gst : taxInfo1Igst}\r\n                                                onChange={e => onInputChangeTable(e, i, \"tax\")} /> </td> : \"\"}\r\n                                            <td><input type=\"number\" name='qty' pattern=\"[0-9]*\" inputmode=\"numeric\" onChange={(e) => onInputChangeTable(e, i, \"\")} /> </td>\r\n                                            <td><input type=\"number\" name='rate' pattern=\"[0-9]*\" inputmode=\"numeric\" onChange={(e) => onInputChangeTable(e, i, \"\")} /></td>\r\n                                            <td><input type=\"number\" name='amount' pattern=\"[0-9]*\" inputmode=\"numeric\" value={item.amount} onChange={(e) => onInputChangeTable(e, i, \"\")} /> </td>\r\n                                            {/* <td>button</td> */}\r\n                                        </tr>)}\r\n\r\n                                    </table>\r\n                                    {/* </form> */}\r\n                                    <div class=\"clearfix\"></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                    <section class=\"invoice-content\">\r\n                        <div class=\"container-fluid\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-6 col-sm-6\">\r\n                                    <div class=\"invoice-left\">\r\n                                        <ul>\r\n                                            <li><button onClick={() => addLineHandler()}>Add Lines</button></li>\r\n                                            <li><button onClick={() => clearAllLine()}>Clear all lines</button></li>\r\n                                            {/* <li><a href=\"\">Clear all lines</a></li> */}\r\n                                            <li><a href=\"\">Add Subtotal</a></li>\r\n                                        </ul>\r\n                                        <div class=\"form-group col-sm-12 pd-0 message-invoice\">\r\n                                            <label>Message on invoice</label>\r\n                                            <textarea class=\"form-control\" rows=\"4\" name='invoice_message'\r\n                                                placeholder=\"This will show up on the invoice.\" onChange={e => onInputChange(e)}>\r\n                                            </textarea>\r\n                                        </div>\r\n                                        <div class=\"form-group col-sm-12 pd-0 message-invoice\">\r\n                                            <label>Message on Statement</label>\r\n                                            <textarea class=\"form-control\" rows=\"3\" name='statement_message'\r\n                                                placeholder=\"If you send statements to customers, this will show up as the description for this invoice.\" onChange={e => onInputChange(e)}>\r\n                                            </textarea>\r\n                                        </div>\r\n                                        <div class=\"col-sm-6 pd-0 message-invoice\">\r\n                                            <form method=\"post\" action=\"#\" id=\"#\">\r\n                                                <div class=\"form-group files\">\r\n                                                    <label><i class=\"fa fa-paperclip\"> Attachments</i> <span>Maximum Size:200MB</span>\r\n                                                    </label>\r\n                                                    <input type=\"file\" class=\"form-control\" name=\"doc\" onChange={e => onSetFile(e)} />\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-6 col-sm-6\">\r\n                                    <div class=\"invoice-right\">\r\n                                        <p>Subtotal<span class=\"amount-invoice\"> ₹{total}</span></p>\r\n                                        <p>Total<span class=\"amount-invoice1\"> ₹{total}</span></p>\r\n                                        <p>Balance Due<span> ₹{total}</span></p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                    <section class=\"footer\">\r\n                        <div class=\"container-fluid\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-4 col-sm-4\">\r\n                                    <div class=\"footer-left\">\r\n                                        <ul>\r\n                                            <li><a href=\"\">Cancel</a></li>\r\n                                            <li><a href=\"\">Clear</a></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-4 col-sm-4\">\r\n                                    <div class=\"footer-center\">\r\n                                        <ul>\r\n                                            <li><a href=\"#\">Print or Preview</a></li>\r\n                                            |\r\n                                            <li><a name='invoice_type' onClick={e => onInputChange(e)}>Make recurring</a></li>\r\n                                            |\r\n                                            <li><a href=\"#\">Customise</a></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-4 col-sm-4\">\r\n                                    <div class=\"footer-right\">\r\n                                        <ul>\r\n                                            <li><button onClick={e => onSubmit(e)}>Save</button></li>\r\n                                            <li class=\"save\"><a href=\"#\">Save and Send</a></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n\r\n                    <Modal show={addOrders} >\r\n                        <Modal.Header closeButton >\r\n                            <Modal.Title>{\"cityData.name\"}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <div class=\"modal-header login-header\">\r\n                            <h4 class=\"modal-title\">Add Order Information</h4>\r\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" name='newCustomer' value={false} onClick={opneAddorderModal}>×</button>\r\n\r\n                        </div>\r\n                        <div class=\"row mt-60\">\r\n                            <div class=\"col-md-12 col-sm-12\">\r\n                                <div class=\"modal-body\">\r\n                                    <Form>\r\n                                        <Row className=\"mb-3\">\r\n                                            <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                                                <Form.Label>Order No *</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"Order No\" />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                                                <Form.Label>Client PO Number</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"Client PO Number\" />\r\n                                            </Form.Group>\r\n                                        </Row>\r\n                                        <Form.Group className=\"mb-3\" controlId=\"formGridAddress2\">\r\n                                            <Form.Label> Descritpion</Form.Label>\r\n                                            <Form.Control placeholder=\"Descritpion\" />\r\n                                        </Form.Group>\r\n                                        <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                                            <Form.Label>Total order value with gst</Form.Label>\r\n                                            <Form.Control placeholder=\"Total order value with gst\" />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group className=\"mb-3\" controlId=\"formGridAddress2\">\r\n                                            <Form.Label>Payment Terms</Form.Label>\r\n                                            {paymentTerm.map((item) => <div id=\"formGridCheckbox\" class=\"mb-3 form-group\">\r\n                                                <div class=\"form-check\">\r\n                                                    <input type=\"text\" class=\"form-check-input\" placeholder=\"Add Term\" />\r\n                                                </div>\r\n                                            </div>)}\r\n                                        </Form.Group>\r\n                                        <button variant=\"primary\" onClick={e => addTermHandler(e)}>Add Term</button>\r\n                                        <button variant=\"secondary\" onClick={e => clearTermAllLine(e)}>clear Term</button>\r\n                                    </Form> </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class='footer-side'>\r\n                            <Modal.Footer>\r\n                                <Button variant=\"secondary\" name='newCustomer' onClick={opneAddorderModal}> Close </Button>\r\n                                <Button variant=\"primary\" onClick={e => onSubmit(e)}> Submit</Button>\r\n                            </Modal.Footer>\r\n                        </div>\r\n\r\n                    </Modal>\r\n                    {/* <!-- Bootstrap and necessary plugins --> */}\r\n                    <script src=\"js/jquery.min.js\" type=\"text/javascript\"></script>\r\n                    <script src=\"js/popper.min.js\" type=\"text/javascript\"></script>\r\n                    <script src=\"js/custom.js\" type=\"text/javascript\"></script>\r\n                    {/* <!--     <script src=\"js/bootstrap.min.js\"></script> --> */}\r\n\r\n                </body>\r\n\r\n            </html>\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default InvoiceAdd;","// export const baseUrl  = \"http://3.12.65.48:4004\"\r\nexport const baseUrl  = \"http://localhost:4004\"\r\n// export const img_url = \"http://localhost:4004/\"\r\nexport const img_url = \"http://3.12.65.48:4004/\"\r\nexport const CONSTANT_NUMBER_2 = 'hello I am also a constant';\r\nexport const sample_file = 'http://3.12.65.48:4004/src/assets/samplesheet.xlsx'"],"sourceRoot":""}
{"version":3,"sources":["views/Customers/recieveinvoice.js"],"names":["InvoiceRecieve","id","useParams","useHistory","Date","useState","startDate","setStartDate","endDate","setEndDate","useEffect","loadData","tableRow","recurrForm","formData1","tax_rego_no","cst_reg_no","pan_no","apply_tds_customer","preferred_payment_method","preferred_delivery_method","term","oppning_balance","as_of_date","is_sub_customer","name","first_name","middle_name","last_name","suffix","company_name","display_name","gst_registration_type","gstin_no","email","number","mobile_no","fax","other","website","Shipping_Address_copy","notes","customer_id","bill_with","formData","setFormData","b_street","b_city","b_state","b_pin","b_country","s_street","s_city","s_state","s_pin","s_country","address","setAddress","sent_later","customer","setCustomer","label","value","addorders","product","setOrderlist","a","axios","get","CONSTANT","localStorage","getItem","response0","data","code","toast","orderList","console","log","iterator","push","order_no","invoice_no","setFormData1","invoice_number","setOrderForm","orderForm","response1","response","billing_address","street","city","state","pin","country","shipping_address","unshift","moment","format","gstTaxAmount","setGstTaxAmount","onInputChangeDate","e","target","add","onInputChange","handleFormValidation","window","scrollTo","checkInvoiceValidation","Number","obj","find","element","_id","formErrors","setFormErrors","invoice_number_error","emailErr","formIsValid","RegExp","test","post","filepath","setFilepath","onSetFile","warn","files","FormData","append","res","message","invoice_type","total","subtotal","balance_due","rowInput","service_date","product_service","description","qty","rate","amount","tax","tax_type","client_po_no","t_order_value","order_startdate","order_enddate","paymentInput","discription","payment_term","interval_time","day_name","day_no","every_day","every_week","every_months","start_date","month_name","onSubmit","preventDefault","interval","created_by","invoice_date","due_date","invoice_message","statement_message","attachments","products_meta","recurring_interval","lang","http-equiv","content","charset","href","rel","crossorigin","class","src","onclick","data-tooltip","onChange","map","item","type","disabled","placeholder","for","style","color","paddingBottom","border","cellspacing","i","rows","method","action","toFixed","onClick"],"mappings":"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","file":"static/js/23.084451a2.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Select from 'react-select';\r\nimport *as  CONSTANT from '../../constant'\r\nimport '../../css/style.css'\r\nimport image from '../../assets/download.png'\r\nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\r\nimport moment from \"moment\";\r\nimport { Button, Row, Col, Form, Table, DropdownButton, Dropdown, Modal, Tabs, Tab, Sonnet } from 'react-bootstrap'\r\nimport { types } from \"@babel/core\";\r\n\r\nconst InvoiceRecieve = () => {\r\n    const { id } = useParams();\r\n    let history = useHistory();\r\n    var someDate = new Date();\r\n    const [startDate, setStartDate] = useState()\r\n    const [endDate, setEndDate] = useState()\r\n    useEffect(() => {\r\n        loadData(id)\r\n    }, [tableRow, recurrForm, formData1])\r\n    const [textInfo, setTexInfo] = useState({\r\n        tax_rego_no: \"\",\r\n        cst_reg_no: \"\",\r\n        pan_no: \"\",\r\n        apply_tds_customer: false\r\n\r\n    })\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState({\r\n        preferred_payment_method: \"\",\r\n        preferred_delivery_method: \"\",\r\n        term: \"\",\r\n        oppning_balance: \"\",\r\n        as_of_date: \"\"\r\n\r\n    })\r\n    const [formData, setFormData] = useState({\r\n        is_sub_customer: false,\r\n        name: \"\",\r\n        first_name: \"\",\r\n        middle_name: \"\",\r\n        last_name: \"\",\r\n        suffix: \"\",\r\n        company_name: \"\",\r\n        display_name: \"\",\r\n        gst_registration_type: \"\",\r\n        gstin_no: \"\",\r\n        email: \"\",\r\n        number: \"\",\r\n        mobile_no: \"\",\r\n        fax: \"\",\r\n        other: \"\",\r\n        website: \"\",\r\n        Shipping_Address_copy: false,\r\n        notes: \"\",\r\n        customer_id: \"\",\r\n        bill_with: \"\",\r\n        // sent_later: \"no\",\r\n        // invoice_number: \"\",\r\n        // invoice_type: \"basic_invoice\",\r\n        // total: 0,\r\n        // subtotal: 0,\r\n        // balance_due: 0\r\n    })\r\n\r\n    const [address, setAddress] = useState({\r\n        b_street: \"\",\r\n        b_city: \"\",\r\n        b_state: \"\",\r\n        b_pin: \"\",\r\n        b_country: \"\",\r\n        s_street: \"\",\r\n        s_city: \"\",\r\n        s_state: \"\",\r\n        s_pin: \"\",\r\n        s_country: \"\"\r\n    })\r\n\r\n    const { is_sub_customer, name, first_name, middle_name, last_name, suffix, company_name, display_name, gst_registration_type\r\n        , gstin_no, email, number, mobile_no, fax, other, website, Shipping_Address_copy, notes, sent_later } = formData\r\n\r\n    const { b_street, b_city, b_state, b_pin, b_country, s_street, s_city, s_state, s_pin, s_country } = address\r\n    // const { tax_rego_no, cst_reg_no, pan_no, apply_tds_customer } = textInfo\r\n\r\n\r\n    const [customer, setCustomer] = useState([])\r\n    const [addorders, setAddorders] = useState([{ label: \"Add Order\", value: \"Add Order\" }])\r\n    const [product, setProduct] = useState([{ label: \"Add Product\", value: \"Add Product\" }])\r\n    const [taxInfo1Gst, setTaxInfo1Gst] = useState([{ label: \"18% Gst\", value: 18 },\r\n    { label: \"6% Gst\", value: 6 },\r\n    { label: \"12% Gst\", value: 12 }])\r\n    const [taxInfo1Igst, setTaxInfo1Igst] = useState([{ label: \"18% Igst\", value: 18 },\r\n    { label: \"6% Igst\", value: 6 },\r\n    { label: \"12% Igst\", value: 12 }])\r\n    const [orderlist, setOrderlist] = useState([])\r\n    const loadData = async (id) => {\r\n        let response0 = await axios.get(`${CONSTANT.baseUrl}/api/admin/get-customer?_id=${localStorage.getItem('subadminid')}`);\r\n        // console.log(\"responsedayaa\", response0)\r\n        if (response0.data.code == 200) {\r\n            toast(\"Add successfully\");\r\n            setCustomer(response0.data.data)\r\n\r\n        }\r\n        let orderList = await axios.get(`${CONSTANT.baseUrl}/api/admin/get-order-list?_id=${id}`);\r\n        console.log(\"orderlist\", orderList.data.data)\r\n        if (orderList.data.code == 200) {\r\n            // toast(\"Add successfully\");\r\n            setOrderlist(orderList.data.data)\r\n            for (const iterator of orderList.data.data) {\r\n                addorders.push({ label: iterator.order_no, value: iterator })\r\n            }\r\n        }\r\n        let invoice_no = await axios.get(`${CONSTANT.baseUrl}/api/admin/get-invoice-no?_id=${id}`);\r\n        // console.log(\"invoice_no\", invoice_no)\r\n        if (invoice_no.data.code == 200) {\r\n            toast(\"Add successfully\");\r\n            setFormData1({ ...formData1, invoice_number: invoice_no.data.data })\r\n        }\r\n        let order_no = await axios.get(`${CONSTANT.baseUrl}/api/admin/get-order-no`);\r\n        // console.log(\"invoice_no\", order_no)\r\n        if (order_no.data.code == 200) {\r\n            toast(\"Add successfully\");\r\n            setOrderForm({ ...orderForm, order_no: order_no.data.data })\r\n        }\r\n        let response1 = await axios.get(`${CONSTANT.baseUrl}/api/admin/get-product-service?_id=${localStorage.getItem('subadminid')}`);\r\n        // console.log(\"product\", response1)\r\n        if (response1.data.code == 200) {\r\n            toast(\"Add successfully\");\r\n            for (const iterator of response1.data.data) {\r\n                product.push({ label: iterator.name, value: iterator })\r\n\r\n            }\r\n            // setProduct(response1.data.data)\r\n        }\r\n        let response = await axios.get(`${CONSTANT.baseUrl}/api/admin/customer-details/${id}`);\r\n        // console.log(\"response\", response.data.data)\r\n        if (response.data.code == 200) {\r\n            toast(\"Add successfully\");\r\n            await setFormData(response.data.data)\r\n            await setAddress({\r\n                b_street: response.data.data.billing_address.street,\r\n                b_city: response.data.data.billing_address.city,\r\n                b_state: response.data.data.billing_address.state,\r\n                b_pin: response.data.data.billing_address.pin,\r\n                b_country: response.data.data.billing_address.country,\r\n                s_street: response.data.data.shipping_address.street,\r\n                s_city: response.data.data.shipping_address.city,\r\n                s_state: response.data.data.shipping_address.state,\r\n                s_pin: response.data.data.shipping_address.pin,\r\n                s_country: response.data.data.shipping_address.country\r\n            })\r\n            await customer.unshift(response.data.data)\r\n            // await setTexInfo(response.data.data.tax_info)\r\n            // await setPaymentMethod(response.data.data.payment_and_billing)\r\n            await setStartDate(moment().format(\"YYYY-MM-DD\"))\r\n            // let nedate =moment(startDate).add(5, 'days')\r\n            await setEndDate(moment().format(\"YYYY-MM-DD\"))\r\n        }\r\n\r\n\r\n        // console.log(\"customercustomercustomer\", customer, invoice_number)\r\n    }\r\n    const onInputChangeAddress = async (e) => {\r\n        // console.log(\"targat\", e.target.name, e.target.value)\r\n        setAddress({ ...address, [e.target.name]: e.target.value });\r\n    }\r\n    const [gstTaxAmount, setGstTaxAmount] = useState('true')\r\n    const onInputChangeDate = async (e) => {\r\n        if (e.target.value == 'due_on_receipt') {\r\n            setEndDate(startDate)\r\n        }\r\n        if (e.target.value == 'net_15') {\r\n            setEndDate(moment(startDate).add(15, 'days').format(\"YYYY-MM-DD\"))\r\n        }\r\n        if (e.target.value == 'net_30') {\r\n            setEndDate(moment(startDate).add(30, 'days').format(\"YYYY-MM-DD\"))\r\n        }\r\n        if (e.target.value == 'net_60') {\r\n            setEndDate(moment(startDate).add(60, 'days').format(\"YYYY-MM-DD\"))\r\n        }\r\n        if (e.target.name == 'amounts_are') {\r\n            // console.log('e.target.amounts_are', e.target.name, typeof e.target.value)\r\n            setGstTaxAmount(e.target.value)\r\n        }\r\n    }\r\n    const onInputChange = async (e) => {\r\n        // console.log(\"formData\", formData)\r\n        // console.log(\"targat\", e.target.name, e.target.value)\r\n\r\n        if (e.target.name == 'startDate') {\r\n            console.log(\"e.target.name\", e.target.value)\r\n            setStartDate(e.target.value)\r\n        }\r\n        if (e.target.name == 'endDate') {\r\n            setEndDate(e.target.value)\r\n        }\r\n        if (e.target.name == 'email') {\r\n            handleFormValidation()\r\n            setFormData({ ...formData, [e.target.name]: e.target.value })\r\n        }\r\n        if (e.target.name == 'sent_later') {\r\n            setFormData({ ...formData, [e.target.name]: \"yes\" })\r\n        }\r\n        if (e.target.name == 'invoice_type') {\r\n            setFormData1({ ...formData1, [e.target.name]: \"recurring_invoice\" })\r\n            window.scrollTo(0, 0);\r\n        }\r\n        if (e.target.name == 'invoice_number') {\r\n            setFormData1({ ...formData1, [e.target.name]: e.target.value })\r\n\r\n            checkInvoiceValidation(Number(e.target.value))\r\n            // console.log(\"dddddddddd\", [e.target.name], e.target.value)\r\n        }\r\n        if (e.target.name == 'customer_id') {\r\n            // console.log(\"targat\", e.target.value)\r\n\r\n            let obj = customer.find(element => element._id == e.target.value);\r\n            setFormData({ ...formData, first_name: obj.first_name })\r\n            // console.log(\"customer\", obj)\r\n            loadData(e.target.value)\r\n        } else {\r\n            setFormData({ ...formData, [e.target.name]: e.target.value })\r\n\r\n        }\r\n\r\n    };\r\n    const [formErrors, setFormErrors] = useState({});\r\n    const { emailErr, invoice_number_error } = formErrors\r\n    const checkInvoiceValidation = async (number) => {\r\n        // console.log(\"checkInvoiceValidation\", typeof number, number, (number === 0))\r\n        let formErrors = {};\r\n        let formIsValid = true;\r\n        if (number) {\r\n            // console.log(\"checkInvoiceValidation\", typeof number, number)\r\n            var mobPattern = new RegExp(/^[0-9]{4,4}$/i);\r\n            // console.log(\"invoice_no\", mobPattern.test(number), number)\r\n            if (!mobPattern.test(number)) {\r\n                formIsValid = false;\r\n                formErrors[\"invoice_number_error\"] = \"Please enter valid1111 number \";\r\n            }\r\n            let invoice_no = await axios.post(`${CONSTANT.baseUrl}/api/admin/check-invoice-no`, { invoice_number: number });\r\n            // console.log(\"invoice_no\", invoice_no)\r\n            if (invoice_no.data.code == 400) {\r\n                // console.log(\"invoice_no\", invoice_no.data)\r\n                formIsValid = false;\r\n                formErrors[\"invoice_number_error\"] = \"this number is already exist\";\r\n            }\r\n\r\n            // if(invoice_no.data.code == 422){\r\n            //     formErrors[\"invoice_number_error\"] =  invoice_no.data.errors[0].error_msg\r\n            // }\r\n\r\n        }\r\n\r\n        setFormErrors(formErrors);\r\n        // console.log(\"hiiiiiiiiiiiiiiii\", formErrors, formIsValid)\r\n        return formIsValid;\r\n    }\r\n    const handleFormValidation = async () => {\r\n        let formErrors = {};\r\n        let formIsValid = true;\r\n        //price number    \r\n        if (!email && email == \"\") {\r\n            formIsValid = false;\r\n            formErrors[\"emailErr\"] = \"email is required.\";\r\n        } else if (email) {\r\n            var mobPattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n            if (!mobPattern.test(email)) {\r\n                formIsValid = false;\r\n                formErrors[\"emailErr\"] = \"Please enter valid email address.\";\r\n            }\r\n        }\r\n        setFormErrors(formErrors);\r\n        return formIsValid;\r\n    }\r\n\r\n    const [region, setRegion] = useState();\r\n    const selectRegion = async (val) => {\r\n        // console.log(\"region\", val)\r\n        await setRegion(val);\r\n    }\r\n\r\n    //////////////////////////////file Attachement ////////////////////////////////////////\r\n    const [filepath, setFilepath] = useState();\r\n    const onSetFile = async e => {\r\n        console.warn(\"............image....\", [e.target.name], e.target.files[0])\r\n        const formData = new FormData();\r\n        formData.append(\r\n            \"file\",\r\n            e.target.files[0],\r\n        );\r\n        console.warn(\"file\", formData)\r\n        const res = await axios.post(`${CONSTANT.baseUrl}/api/admin/uploade-doc`, formData, { \"Content-Type\": \"multipart/form-data\" });\r\n        // console.log(\"response\", res.data)\r\n        if (res.data.code == 200) {\r\n            setFilepath(res.data.data)\r\n        } else {\r\n            console.warn(\"error\", res.data.message)\r\n        }\r\n        console.log(\"filepath\", filepath)\r\n    }\r\n    ///////////////////////////////Manege Table////////////////////////////\r\n    const [formData1, setFormData1] = useState({\r\n        sent_later: \"no\",\r\n        invoice_number: \"\",\r\n        invoice_type: \"basic_invoice\",\r\n        total: 0,\r\n        subtotal: 0,\r\n        balance_due: 0\r\n    })\r\n    const { total, subtotal, balance_due, invoice_number, invoice_type, } = formData1\r\n    const rowInput = {\r\n        id: \"\",\r\n        service_date: \"\",\r\n        product_service: \"\",\r\n        description: \"\",\r\n        qty: \"\",\r\n        rate: \"\",\r\n        amount: \"\",\r\n        subtotal: \"\",\r\n        tax: \"\",\r\n        tax_type: \"\"\r\n    }\r\n    // const {service_date,product_service,description,qty,rate,amount,tax}=rowInput\r\n    const [tableRow, setTableRow] = useState([{ ...rowInput }]);\r\n    const onInputChangeTable = async (e, i, type) => {\r\n        //    console.log(\"onInputChangeTable\", e.target.name, e.target.value, e.label)\r\n        if (type == 'product_service') {\r\n            // console.log(\"e.label\", e.label,)\r\n            // console.log(\"e.value\", e.value)\r\n            if (e.label == 'Add Product') {\r\n                console.log(\"adddpppppppppppppppppp\")\r\n                history.push(\"/master-product\");\r\n            } else {\r\n                tableRow[i]['product_service'] = e.value.name\r\n                tableRow[i]['description'] = e.value.discription\r\n                let taxAmount = Number(e.value.price) * (Number(e.value.tax) / 100)\r\n                tableRow[i]['amount'] = e.value.price + taxAmount\r\n                tableRow[i]['subtotal'] = Number(e.value.price)\r\n                tableRow[i]['tax'] = Number(e.value.tax)\r\n                tableRow[i]['qty'] = 1\r\n                tableRow[i]['tax_type'] = localStorage.getItem('state') == b_state ? 'Gst' : 'Igst'\r\n                // tableRow[i]['rate'] = 1\r\n                // tableRow[i]['description'] = e.value.name\r\n            }\r\n        } else if (type == 'tax') {\r\n            // console.log(\"type\", type, e.label)\r\n\r\n            if (tableRow[i].amount == \"\") {\r\n                tableRow[i]['tax'] = e.value\r\n                let amount = Number(tableRow[i].qty) * Number(tableRow[i].rate)\r\n                tableRow[i]['subtotal'] = amount\r\n                let taxAmount = amount * (e.value / 100)\r\n                tableRow[i].amount = taxAmount + amount\r\n                // if (e.label == '6% Gst' || e.label == '12% Gst' || e.label == '18% Gst') {\r\n                //     tableRow[i].tax_type = \"Gst\"\r\n                // } else {\r\n\r\n                // }\r\n                tableRow[i].tax_type = localStorage.getItem('state') == b_state ? 'Gst' : 'Igst'\r\n            } else {\r\n                tableRow[i]['tax'] = e.value\r\n                let amount = tableRow[i].amount\r\n                tableRow[i]['subtotal'] = amount\r\n                let taxAmount = amount * (e.value / 100)\r\n                tableRow[i].amount = taxAmount + amount\r\n                // if (e.label == '6% Gst' || e.label == '12% Gst' || e.label == '18% Gst') {\r\n                //     tableRow[i].tax_type = \"Gst\"\r\n                // } else {\r\n                //     tableRow[i].tax_type = \"Igst\"\r\n                // }\r\n                tableRow[i].tax_type = localStorage.getItem('state') == b_state ? 'Gst' : 'Igst'\r\n            }\r\n\r\n        } else {\r\n            if ('amount' == e.target.name) {\r\n                console.log(\"amount\", e.target.name, typeof e.target.name)\r\n                // console.log( \"amounttttttttt\",e.target.value ,tableRow[i].tax, typeof e.target.value)\r\n                // console.log(\"totala\", Number(e.target.value) *(tableRow[i].tax /100))\r\n\r\n                //    let amount = Number(e.target.value) *(tableRow[i].tax /100)\r\n                tableRow[i]['amount'] = Number(e.target.value) + Number(e.target.value) * (tableRow[i].tax / 100)\r\n                tableRow[i]['subtotal'] = Number(e.target.value)\r\n            }\r\n            if ('rate' == e.target.name) {\r\n                let amount = Number(e.target.value) * Number(tableRow[i].qty)\r\n                tableRow[i]['subtotal'] = amount\r\n                let taxAmount = amount * (tableRow[i].tax / 100)\r\n                tableRow[i]['amount'] = amount + taxAmount\r\n                tableRow[i][e.target.name] = Number(e.target.value)\r\n            }\r\n            if ('qty' == e.target.name) {\r\n                // console.log(\"qtyqtyqty\", e.target.name, typeof e.target.value, e.target.value, tableRow[i])\r\n                let amount = Number(e.target.value) * Number(tableRow[i].rate)\r\n                tableRow[i]['subtotal'] = amount\r\n                let taxAmount = amount * (tableRow[i].tax / 100)\r\n                tableRow[i]['amount'] = amount + taxAmount\r\n                tableRow[i][e.target.name] = Number(e.target.value)\r\n            }\r\n            // else {\r\n            //     tableRow[i][e.target.name] = e.target.value\r\n            // }\r\n\r\n        }\r\n        let calculatSum = await tableRow.reduce((accumulator, current) => accumulator + current.amount, 0)\r\n        let calculatSubTotal = await tableRow.reduce((accumulator, current) => accumulator + current.subtotal, 0)\r\n        formData1.subtotal = calculatSubTotal\r\n        // formData1.total = calculatSum\r\n        await setFormData1({ ...formData1, total: calculatSum })\r\n        // console.log(\"tableRow\", tableRow)\r\n    }\r\n    const addLineHandler = () => {\r\n        // console.log(\"AddLine Handler called\")\r\n        setTableRow([...tableRow, { ...rowInput }])\r\n    }\r\n    const clearAllLine = () => {\r\n        setTableRow([rowInput])\r\n    }\r\n    ////////////////////////////////////////////////add orders  //////////////////////////////////////\r\n\r\n    const [addOrders, setAddOrders] = useState(false)\r\n    const [orderForm, setOrderForm] = useState({\r\n        order_no: \"\",\r\n        client_po_no: \"\",\r\n        description: \"\",\r\n        t_order_value: \"\",\r\n        order_startdate: \"\",\r\n        order_enddate: \"\"\r\n    })\r\n    const { order_no, client_po_no, discription, t_order_value, order_startdate, order_enddate } = orderForm\r\n    const paymentInput = {\r\n        payment_term: \"\"\r\n    }\r\n    const [paymentTerm, setPaymentTerm] = useState([{ ...paymentInput }])\r\n    const onInputchangeOrder = async (e, i) => {\r\n        // e.preventDefault();\r\n        // console.log(\"eqqqqqqqqqqqqqqq\",e.target.value, e.target.name , i)\r\n        if ('payment_term' == e.target.name) {\r\n            paymentTerm[i]['payment_term'] = e.target.value\r\n        } else {\r\n            setOrderForm({ ...orderForm, [e.target.name]: e.target.value })\r\n        }\r\n    }\r\n    const [term1, setTerm1] = useState([])\r\n    const onInputChangeorder = async (e) => {\r\n        console.log(\"onInputChangeOrder\", e, e.value)\r\n        if (e.value == 'Add Order') {\r\n            opneAddorderModal(\"\", \"Add_Order\")\r\n        } else {\r\n            let array1 = []\r\n            if (e.value.payment_term) {\r\n                for (const iterator of e.value.payment_term) {\r\n                    array1.push({ label: iterator.payment_term, value: iterator })\r\n                }\r\n                setTerm1(array1)\r\n            }\r\n            setEndDate(e.value.order_enddate)\r\n            setStartDate(e.value.order_startdate)\r\n        }\r\n    }\r\n    const orderSubmit = async (e) => {\r\n        e.preventDefault();\r\n        // console.log(\"orderSubmitorderSubmit\",orderForm, paymentTerm)\r\n        orderForm.payment_term = paymentTerm\r\n        orderForm.created_by = localStorage.getItem('subadminid')\r\n        orderForm.customer_id = id\r\n        // console.log(\"daaaaaaa\", orderForm)\r\n        let response = await axios.post(`${CONSTANT.baseUrl}/api/admin/create-order`, orderForm);\r\n        // console.log(\"response\", response)\r\n        if (response.data.code == 200) {\r\n            toast(\"create successfully\");\r\n            setTimeout(function () { setAddOrders(false) }, 3000);\r\n        }\r\n    }\r\n    const addTermHandler = (e) => {\r\n        e.preventDefault();\r\n        setPaymentTerm([...paymentTerm, { ...paymentInput }])\r\n        // console.log(\"paymentTerm\", paymentTerm)\r\n    }\r\n    const clearTermAllLine = (e) => {\r\n        e.preventDefault();\r\n        setPaymentTerm([paymentInput])\r\n    }\r\n    const opneAddorderModal = async (e, type) => {\r\n        if (type == \"Add_Order\") {\r\n            await setAddOrders(true)\r\n        } else {\r\n            e.target.value == 'false' ? await setAddOrders(false) : await setAddOrders(true)\r\n        }\r\n    }\r\n\r\n    //////////////////////////////////////////recurring///////////////////////////////////////////////////////////////////// \r\n\r\n    var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    var day_number = [\"1st\", \"2nd\", \"3rd\", \"4th\", \"5th\", \"6th\", \"7th\", \"8th\", \"9th\", \"10th\", \"11th\", \"12th\", \"13th\",\r\n        \"14th\", \"15th\", \"16th\", \"17th\", \"18th\", \"19th\", \"20th\", \"21st\", \"22nd\", \"23rd\", \"24th\", \"25th\", \"26th\", \"27th\", \"28th\", \"last\"];\r\n    const [recurrForm, setRecurrForn] = useState({\r\n        interval_time: \"Daily\",\r\n        day_name: \"\",\r\n        day_no: \"Day\",\r\n        every_day: \"\",\r\n        every_week: \"\",\r\n        every_months: \"\",\r\n        start_date: \"\",\r\n        month_name: \"\"\r\n    })\r\n    const { interval_time, day_name, day_no, start_date, every_day, every_week, month_name, every_months } = recurrForm\r\n    const onInputChangeInterval = async (e) => {\r\n        // console.log(\"e.target.name\", e.target.name, e.target.value)\r\n        setRecurrForn({ ...recurrForm, [e.target.name]: e.target.value })\r\n        // console.log(\"e.target.namenamename\", interval_time, day_name, day_no, start_date)\r\n    }\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        let data = {}\r\n        // console.log(\"daaaaaaa\", id, formData1, formData, tableRow, recurrForm)\r\n        let interval = invoice_type == 'basic_invoice' ? {\r\n            interval_time: \"\", day_name: \"\", day_no: \"\", every_day: \"\", every_week: \"\", every_months: \"\", start_date: \"\", month_name: \"\"\r\n        } : recurrForm\r\n        data = {\r\n            customer_id: id,\r\n            created_by: localStorage.getItem('subadminid'),\r\n            invoice_number: invoice_number,\r\n            invoice_type: invoice_type,\r\n            invoice_date: startDate,\r\n            due_date: endDate,\r\n            total: total,\r\n            subtotal: subtotal,\r\n            balance_due: balance_due,\r\n            invoice_message: formData.invoice_message,\r\n            statement_message: formData.statement_message,\r\n            attachments: filepath,\r\n            products_meta: tableRow,\r\n            recurring_interval: interval\r\n        }\r\n        // console.log(\"daaaaaaa\", data)\r\n        let response = await axios.post(`${CONSTANT.baseUrl}/api/admin/create-invoice`, data);\r\n        // console.log(\"response\", response)\r\n        if (response.data.code == 200) {\r\n            toast(\"create successfully\");\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            {/* <!DOCTYPE html> */}\r\n\r\n            <html lang=\"en\">\r\n                <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8\" />\r\n                <head>\r\n                    <meta charset=\"utf-8\" />\r\n                    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n                    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n                    <meta name=\"description\" content=\"\" />\r\n                    <meta name=\"author\" content=\"\" />\r\n                    <meta name=\"keyword\" content=\"\" />\r\n                    <title>Winklix Internet</title>\r\n                    {/* <!-- Icons --> */}\r\n                    <link href=\"css/font-awesome.min.css\" rel=\"stylesheet\" />\r\n                    <link href=\"https://fonts.googleapis.com/css?family=Poppins:100,200,300,400,500,700,800\" rel=\"stylesheet\" />\r\n                    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\r\n                    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\r\n                    <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700;900&display=swap\" rel=\"stylesheet\" />\r\n                    {/* <!-- Main styles for this application --/> */}\r\n                    <link href=\"css/style.css\" rel=\"stylesheet\" />\r\n                    <link href=\"css/custom.css\" rel=\"stylesheet\" />\r\n                    {/* <!-- Styles required by this views --> */}\r\n                </head>\r\n                <body class=\"invoice-body\">\r\n                    <section class=\"header-invoice\">\r\n                        <div class=\"container-fluid\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-4 col-sm-4\">\r\n                                    <div class=\"left-portion\">\r\n                                        <h2><img src=\"img/wall-clock.png\" /> Invoice Recieve</h2>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-8 col-sm-8\">\r\n                                    <div class=\"right-portion\">\r\n                                        <ul>\r\n                                            <li><a href=\"javascript:void(0)\" onclick=\"openNav()\"><i class=\"fa fa-bars\"></i></a></li>\r\n                                            <li><a href=\"#\"><img src=\"img/help.png\" /> Help</a></li>\r\n                                            <li><a href=\"#\"><img src=\"img/settings.png\" /> </a></li>\r\n                                        </ul>\r\n                                        <div id=\"mySidenav1\" class=\"sidenav1\">\r\n                                            <a href=\"javascript:void(0)\" class=\"Close\" onclick=\"closeNav()\">&times;</a>\r\n                                            <h2 class=\"cust-invoice\">Add to Invoice</h2>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                    <section class=\"custom-box\">\r\n                        <div class=\"container-fluid\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-8 col-sm-8\">\r\n                                    <div class=\"custom\">\r\n                                        <form>\r\n                                            <div class=\"row\">\r\n                                                <div class=\"form-group col-sm-4 cust-width\">\r\n                                                    <label>Customer  </label>\r\n                                                    <p><a href=\"#\" data-tooltip=\"Select a Custom to Make SUre The Right Person Pays You On Time\"><i class=\"fa fa-question-circle-o\"></i></a></p>\r\n                                                    <select class=\"form-control\" name=\"customer_id\"\r\n                                                        onChange={e => onInputChange(e)} >\r\n                                                        {customer.map(item => (\r\n                                                            <option value={item._id}>{item.first_name}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                </div>\r\n\r\n                                                <div class=\"form-group col-sm-4 cust-width\">\r\n                                                    <div class=\"separate-box\">\r\n                                                        <label>Customer Email</label>\r\n                                                        <p><a href=\"#\" data-tooltip=\"You Can Send to More Than One Address By Separating Emails With a Comma \"><i class=\"fa fa-question-circle-o\"></i></a></p>\r\n                                                        <input type=\"text\" name=\"email\" disabled=\"disabled\" value={email} class=\"form-control\" placeholder=\"Separate emails with a comma\" onChange={e => onInputChange(e)} />\r\n                                                        <div class=\"form-group sent\">\r\n\r\n                                                            <label><input type=\"checkbox\" id=\"html\" name='sent_later' value={sent_later} onChange={e => onInputChange(e)} />  Sent Later</label>\r\n                                                            <p><a href=\"#\" data-tooltip=\"You Can Send Later From The All Sales List. Filter By Delivery Method>Send Later.\"><i class=\"fa fa-question-circle-o\"></i></a></p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"form-group col-sm-4\">\r\n                                                    <a href=\"#\">find By Ivoice</a>\r\n                                                    <div class=\"form-group\">\r\n                                                        <input type=\"text\" placeholder=\"find invoice here\" />\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                                \r\n\r\n                                            </div>\r\n                                            <div class=\"float-right1\">\r\n                                                    <p>BALANCE DUE</p>\r\n                                                    <h2>₹0.00</h2>\r\n                                                </div>\r\n                                        </form>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                    <section class=\"billing-address\">\r\n                        <div class=\"container-fluid\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-8 col-sm-8\">\r\n                                    <div class=\"flex-content\">\r\n                                        <div class=\"UserRight1\">\r\n                                            <form>\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"form-group col-sm-3 cust-width2\">\r\n                                                        <label for=\"\">Payment date</label>\r\n                                                        <input type=\"date\" name=\"startDate\" value={startDate} onChange={e => onInputChange(e)} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"form-group col-sm-3\">\r\n                                                        <label for=\"\">Payment Methode</label>\r\n                                                        <select class=\"form-control taxes1\" name=\"amounts_are\" onChange={e => onInputChange(e)}>\r\n                                                            <option value={''}>+ add New</option>\r\n                                                            <option value={true}>Cash</option>\r\n                                                            <option value={true}>Check</option>\r\n                                                            <option value={false}>Credit card</option>\r\n                                                        </select>\r\n                                                        {/* <input type=\"text\" name=\"endDate\" value={endDate} onChange={e => onInputChange(e)} /> */}\r\n                                                    </div>\r\n                                                    <div class=\"form-group col-sm-3\">\r\n                                                        <label for=\"\">Reference no.</label>\r\n                                                        <input type=\"text\" name=\"reference_no\" value={\"\"} onChange={e => onInputChange(e)} />\r\n                                                    </div>\r\n                                                    <div class=\"form-group col-sm-3\">\r\n                                                        <label for=\"\">Deposit to</label>\r\n                                                        <select class=\"form-control taxes1\" name=\"amounts_are\" onChange={e => onInputChange(e)}>\r\n                                                            <option value={''}>Inventory Asset</option>\r\n                                                            <option value={true}>Deferred Service Tax Input Credit</option>\r\n                                                            <option value={true}>Deferred CGST</option>\r\n                                                            <option value={false}>Deferred GST Input Credit</option>\r\n                                                        </select>\r\n                                                        {/* <input type=\"text\" name=\"endDate\" value={endDate} onChange={e => onInputChange(e)} /> */}\r\n                                                    </div>\r\n\r\n                                                </div>\r\n\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-4 col-sm-4\">\r\n\r\n                                    <div class=\"invoice-box\">\r\n                                        <label>Amount Recieve</label>\r\n                                        <input type=\"number\" name=\"invoice_number\" value={invoice_number} class=\"form-control\" placeholder=\"1001\" onChange={e => onInputChange(e)} />\r\n\r\n                                        {invoice_number_error &&\r\n                                            <div style={{ color: \"red\", paddingBottom: 10 }}>{invoice_number_error}</div>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                    <section class=\"exclusive-tax\">\r\n                        <div class=\"container-fluid\">\r\n                            <div class=\"row\">\r\n                                Outstanding Transactions\r\n                                <div class=\"form-group col-sm-9\"></div>\r\n                                <div class=\"form-group col-sm-3 exclusive-right\">\r\n                                    <label class=\"tax\">search </label>\r\n                                    <select class=\"form-control taxes1\" name=\"amounts_are\" onChange={e => onInputChangeDate(e)}>\r\n                                        <option value={true}>search here invoice no</option>\r\n                                        <option value={true}>Exclusive of Tax</option>\r\n                                        <option value={true}>Inclusive of Tax</option>\r\n                                        <option value={false}>Out of Scope of Tax</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                    <section class=\"cone-table1\">\r\n                        <div class=\"container-fluid\">\r\n                            <div class=\"row clearfix\">\r\n                                <div class=\"col-md-12 column\">\r\n                                    <table border=\"1\" cellspacing=\"0\">\r\n                                        <tr>\r\n                                            {/* <th ><input class='check_all' type='checkbox' onclick=\"select_all()\" /></th> */}\r\n                                            {/* <button type=\"button\" class='delete'><i class=\"fa fa-trash\"></i>\r\n                                            </button>\r\n                                            <button type=\"button\" class='addmore'><i class=\"fa fa-plus-circle\"></i>\r\n                                            </button> */}\r\n                                            <th>#</th>\r\n                                            <th>description</th>\r\n                                            <th>due date <i class=\"fa fa-question-circle-o\"></i></th>\r\n                                            <th>orignal amount</th>\r\n                                            <th>oper balance</th>\r\n                                            <th>payment</th>\r\n                                        </tr>\r\n                                        {tableRow && tableRow?.map((item, i) => <tr>\r\n                                            <td><span id='snum'>{i + 1}</span></td>\r\n                                            <td><span id='snum'>{\"\"}</span></td>\r\n                                            <td><span id='snum'>{\"\"}</span></td>\r\n                                            <td><span id='snum'>{\"\"}</span></td>\r\n                                            <td><span id='snum'>{\"\"}</span></td>\r\n                                            {/* <td>button</td> */}\r\n                                        </tr>)}\r\n\r\n                                    </table>\r\n                                    {/* </form> */}\r\n                                    <div class=\"clearfix\"></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                    <section class=\"invoice-content\">\r\n                        <div class=\"container-fluid\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-6 col-sm-6\">\r\n                                    <div class=\"invoice-left\">\r\n                                        <div class=\"form-group col-sm-12 pd-0 message-invoice\">\r\n                                            <label>Memo</label>\r\n                                            <textarea class=\"form-control\" rows=\"3\" name='note'\r\n                                                placeholder=\"Note..\" onChange={e => onInputChange(e)}>\r\n                                            </textarea>\r\n                                        </div>\r\n                                        <div class=\"col-sm-6 pd-0 message-invoice\">\r\n                                            <form method=\"post\" action=\"#\" id=\"#\">\r\n                                                <div class=\"form-group files\">\r\n                                                    <label><i class=\"fa fa-paperclip\"> Attachments</i> <span>Maximum Size:200MB</span>\r\n                                                    </label>\r\n                                                    <input type=\"file\" class=\"form-control\" name=\"doc\" onChange={e => onSetFile(e)} />\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-6 col-sm-6\">\r\n                                    <div class=\"invoice-right\">\r\n                                        <p>Subtotal<span class=\"amount-invoice\"> ₹{subtotal.toFixed(2)}</span></p>\r\n\r\n                                        {gstTaxAmount == 'true' ? <div>   {\r\n\r\n                                            tableRow.map((item) => <div>\r\n                                                {item.tax_type == 'Gst' ? <div>\r\n                                                    <p>CGST {(item.tax / 2)} % on {item.subtotal}<span class=\"amount-invoice1\"> ₹{((total - subtotal) / 2).toFixed(2)}</span></p>\r\n                                                    <p>SGST {(item.tax / 2)} % on {item.subtotal}<span class=\"amount-invoice1\"> ₹{((total - subtotal) / 2).toFixed(2)}</span></p>\r\n                                                </div> : item.tax_type == 'Igst' ?\r\n                                                    <p>IGST {(item.tax)} % on {item.subtotal.toFixed(2)}<span class=\"amount-invoice1\"> ₹{(total - subtotal).toFixed(2)}</span></p> : \"\"\r\n                                                }\r\n                                            </div>\r\n\r\n                                            )\r\n                                        }\r\n                                            <p>Total<span class=\"amount-invoice1\"> ₹{total.toFixed(2)}</span></p>\r\n                                            <p>Balance Due<span> ₹{total.toFixed(2)}</span></p>\r\n                                        </div> : <div><p>Total<span class=\"amount-invoice1\"> ₹{subtotal}</span></p>\r\n                                            <p>Balance Due<span> ₹{subtotal}</span></p></div>}\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                    <section class=\"footer\">\r\n                        <div class=\"container-fluid\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-4 col-sm-4\">\r\n                                    <div class=\"footer-left\">\r\n                                        <ul>\r\n                                            <li><a href=\"\">Cancel</a></li>\r\n                                            <li><a href=\"\">Clear</a></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-4 col-sm-4\">\r\n                                    <div class=\"footer-center\">\r\n                                        <ul>\r\n                                            <li><a href=\"#\">Print or Preview</a></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-4 col-sm-4\">\r\n                                    <div class=\"footer-right\">\r\n                                        <ul>\r\n                                            <li><button onClick={e => onSubmit(e)}>Save</button></li>\r\n                                            <li class=\"save\"><a href=\"#\">Save and Send</a></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n\r\n                    {/* <!-- Bootstrap and necessary plugins --> */}\r\n                    <script src=\"js/jquery.min.js\" type=\"text/javascript\"></script>\r\n                    <script src=\"js/popper.min.js\" type=\"text/javascript\"></script>\r\n                    <script src=\"js/custom.js\" type=\"text/javascript\"></script>\r\n                    {/* <!--     <script src=\"js/bootstrap.min.js\"></script> --> */}\r\n\r\n                </body>\r\n\r\n            </html>\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default InvoiceRecieve;"],"sourceRoot":""}
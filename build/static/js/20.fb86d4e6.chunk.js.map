{"version":3,"sources":["views/Customers/recieveinvoice.js","constant.js"],"names":["InvoiceRecieve","id","useParams","useHistory","useState","startDate","setStartDate","useEffect","loadData","getInvoiceData","invoiceList","recievData","email","sent_later","formData","setFormData","recieve_total","apply_amount","setRecievData","customer","setCustomer","name","value","methods","a","axios","get","CONSTANT","localStorage","getItem","response0","data","code","toast","console","log","response1","iterator","push","response","unshift","moment","format","setInvoiceList","request","_id","searchData","post","invoiceList1","tempArray","docs","isCheck","searchfilter","setSearchfilter","paymetMethod1","setPaymentMethod1","onInputChange","e","target","detail","setOpenModal","handleFormValidation","tax_rego_no","cst_reg_no","pan_no","apply_tds_customer","preferred_payment_method","preferred_delivery_method","term","oppning_balance","as_of_date","formErrors","setFormErrors","invoice_number_error","emailErr","formIsValid","RegExp","test","filepath","setFilepath","onSetFile","warn","files","FormData","append","res","message","openModal","modalHaldeler","saveData","preventDefault","created_by","responsefolder","onSubmit","allselectInvoice","invoice_no","checked","payment","total","reduce","accumulator","current","calculatSum","lang","http-equiv","content","charset","href","rel","crossorigin","class","src","onclick","data-tooltip","onChange","map","item","first_name","type","disabled","placeholder","for","onClick","style","color","paddingBottom","border","i","defaultChecked","invoice_number","invoice_date","due_date","rows","method","action","show","Header","closeButton","Title","data-dismiss","Group","className","controlId","Control","Footer","variant","baseUrl"],"mappings":"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","file":"static/js/20.fb86d4e6.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Select from 'react-select';\r\nimport *as  CONSTANT from '../../constant'\r\nimport '../../css/style.css'\r\nimport image from '../../assets/download.png'\r\nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\r\nimport moment from \"moment\";\r\nimport { Button, Row, Col, Form, Table, DropdownButton, Dropdown, Modal, Tabs, Tab, Sonnet } from 'react-bootstrap'\r\nimport { types } from \"@babel/core\";\r\n\r\nconst InvoiceRecieve = () => {\r\n    const { id } = useParams();\r\n    let history = useHistory();\r\n    const [startDate, setStartDate] = useState()\r\n    useEffect(() => {\r\n        loadData(id)\r\n        getInvoiceData(id)\r\n    }, [invoiceList, recievData])\r\n\r\n    const [formData, setFormData] = useState({\r\n        email: \"\",\r\n        sent_later: false,\r\n       \r\n\r\n    })\r\n    const [recievData, setRecievData] = useState({\r\n        recieve_total :0.00,\r\n        apply_amount: 0.00,\r\n\r\n    })\r\n    const {  recieve_total , apply_amount} = recievData\r\n    const { email, sent_later} = formData\r\n\r\n    const [customer, setCustomer] = useState([])\r\n    const [methods, setMethods] = useState([{ name: \"+add new\", value: \"add_new\" }])\r\n\r\n    const loadData = async (id) => {\r\n        let response0 = await axios.get(`${CONSTANT.baseUrl}/api/admin/get-customer?_id=${localStorage.getItem('subadminid')}`);\r\n        // console.log(\"responsedayaa\", response0)\r\n        if (response0.data.code == 200) {\r\n            toast(\"Add successfully\");\r\n            setCustomer(response0.data.data)\r\n\r\n        } else {\r\n            console.log(\"error\", response0)\r\n        }\r\n        let response1 = await axios.get(`${CONSTANT.baseUrl}/api/admin/get-payment-method?_id=${localStorage.getItem('subadminid')}`);\r\n        console.log(\"response1\", response1)\r\n        if (response1.data.code == 200) {\r\n            toast(\"Add successfully\");\r\n            for (const iterator of response1.data.data) {\r\n                methods.push(iterator)\r\n\r\n            }\r\n            // setMethods(response1.data.data)\r\n            // methods.unshift({name : \"+add new\"})\r\n\r\n        } else {\r\n            console.log(\"error\", response1)\r\n            // methods.unshift({name : \"+add new\"})\r\n        }\r\n        let response = await axios.get(`${CONSTANT.baseUrl}/api/admin/customer-details/${id}`);\r\n        // console.log(\"response\", response.data.data)\r\n        if (response.data.code == 200) {\r\n            toast(\"Add successfully\");\r\n            await setFormData(response.data.data)\r\n            await customer.unshift(response.data.data)\r\n            await setStartDate(moment().format(\"YYYY-MM-DD\"))\r\n            // getInvoiceData(id)\r\n        } else {\r\n            console.log(\"error\", response)\r\n        }\r\n    }\r\n\r\n    const [invoiceList, setInvoiceList] = useState([])\r\n    const getInvoiceData = async (id) => {\r\n        try {\r\n            let request = { _id: id }\r\n            if (searchData != \"\") {\r\n                request.searchData = searchData\r\n            }\r\n            let invoiceList1 = await axios.post(`${CONSTANT.baseUrl}/api/admin/get-invoice-list`, request);\r\n            console.log(\"invoiceList\", invoiceList1.data.data)\r\n            if (invoiceList1.data.code == 200) {\r\n                toast(\"Add successfully\");\r\n                let tempArray =[]\r\n                for (const iterator of invoiceList1.data.data.docs) {\r\n                    iterator.isCheck = false\r\n                    tempArray.push(iterator)\r\n                //    await setInvoiceList([... invoiceList,iterator])\r\n                }\r\n               await setInvoiceList(tempArray)\r\n            }\r\n            else {\r\n                console.log(\"error\", invoiceList1)\r\n            }\r\n        } catch (error) {\r\n            console.log(\"error\", error)\r\n        }\r\n\r\n    }\r\n    /////////////////////////////////\r\n    const [searchfilter, setSearchfilter] = useState({ searchData: \"\", })\r\n    const { searchData } = searchfilter\r\n\r\n    // let payment_method_name = ''\r\n    const [paymetMethod1, setPaymentMethod1] = useState('')\r\n    const onInputChange = async (e) => {\r\n        console.log(\"targat\", e.target.name, e.target.value)\r\n        if (e.target.name == 'payment_method') {\r\n            if (e.detail === 0) {\r\n                if (e.target.value == 'add_new') {\r\n                    await setOpenModal(true)\r\n                }\r\n            }\r\n        }\r\n        if (e.target.name == 'apply_amount') {\r\n            setRecievData({...recievData, [e.target.name]:e.target.value })\r\n        }\r\n        \r\n        if (e.target.name == 'payment_method_name') {\r\n            // payment_method_name = e.target.value\r\n            setPaymentMethod1(e.target.value)\r\n            console.log(\"hiiiiiiiiiiiiiiiiiiii\", paymetMethod1)\r\n        }\r\n        if (e.target.name == 'startDate') {\r\n            console.log(\"e.target.name\", e.target.value)\r\n            setStartDate(e.target.value)\r\n        }\r\n        if (e.target.name == 'searchData') {\r\n            console.log(\"e.target.name\", e.target.value)\r\n            setSearchfilter({ ...searchfilter, [e.target.name]: e.target.value })\r\n        }\r\n        if (e.target.name == 'email') {\r\n            handleFormValidation()\r\n            setFormData({ ...formData, [e.target.name]: e.target.value })\r\n        }\r\n        if (e.target.name == 'sent_later') {\r\n            setFormData({ ...formData, [e.target.name]: \"yes\" })\r\n        }\r\n\r\n        if (e.target.name == 'customer_id') {\r\n            // console.log(\"targat\", e.target.value)\r\n\r\n            // let obj = customer.find(element => element._id == e.target.value);\r\n            // setFormData({ ...formData, first_name: obj.first_name })\r\n            // console.log(\"customer\", obj)\r\n            loadData(e.target.value)\r\n        } else {\r\n            setFormData({ ...formData, [e.target.name]: e.target.value })\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const [textInfo, setTexInfo] = useState({\r\n        tax_rego_no: \"\",\r\n        cst_reg_no: \"\",\r\n        pan_no: \"\",\r\n        apply_tds_customer: false\r\n\r\n    })\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState({\r\n        preferred_payment_method: \"\",\r\n        preferred_delivery_method: \"\",\r\n        term: \"\",\r\n        oppning_balance: \"\",\r\n        as_of_date: \"\"\r\n\r\n    })\r\n\r\n\r\n\r\n    const [formErrors, setFormErrors] = useState({});\r\n    const { emailErr, invoice_number_error } = formErrors\r\n    const checkInvoiceValidation = async (number) => {\r\n        // console.log(\"checkInvoiceValidation\", typeof number, number, (number === 0))\r\n        let formErrors = {};\r\n        let formIsValid = true;\r\n        if (number) {\r\n            // console.log(\"checkInvoiceValidation\", typeof number, number)\r\n            var mobPattern = new RegExp(/^[0-9]{4,4}$/i);\r\n            // console.log(\"invoice_no\", mobPattern.test(number), number)\r\n            if (!mobPattern.test(number)) {\r\n                formIsValid = false;\r\n                formErrors[\"invoice_number_error\"] = \"Please enter valid1111 number \";\r\n            }\r\n            let invoice_no = await axios.post(`${CONSTANT.baseUrl}/api/admin/check-invoice-no`, { invoice_number: number });\r\n            // console.log(\"invoice_no\", invoice_no)\r\n            if (invoice_no.data.code == 400) {\r\n                // console.log(\"invoice_no\", invoice_no.data)\r\n                formIsValid = false;\r\n                formErrors[\"invoice_number_error\"] = \"this number is already exist\";\r\n            }\r\n        }\r\n\r\n        setFormErrors(formErrors);\r\n        return formIsValid;\r\n    }\r\n    const handleFormValidation = async () => {\r\n        let formErrors = {};\r\n        let formIsValid = true;\r\n        //price number    \r\n        if (!email && email == \"\") {\r\n            formIsValid = false;\r\n            formErrors[\"emailErr\"] = \"email is required.\";\r\n        } else if (email) {\r\n            var mobPattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n            if (!mobPattern.test(email)) {\r\n                formIsValid = false;\r\n                formErrors[\"emailErr\"] = \"Please enter valid email address.\";\r\n            }\r\n        }\r\n        setFormErrors(formErrors);\r\n        return formIsValid;\r\n    }\r\n\r\n    //////////////////////////////file Attachement ////////////////////////////////////////\r\n    const [filepath, setFilepath] = useState();\r\n    const onSetFile = async e => {\r\n        console.warn(\"............image....\", [e.target.name], e.target.files[0])\r\n        const formData = new FormData();\r\n        formData.append(\r\n            \"file\",\r\n            e.target.files[0],\r\n        );\r\n        console.warn(\"file\", formData)\r\n        const res = await axios.post(`${CONSTANT.baseUrl}/api/admin/uploade-doc`, formData, { \"Content-Type\": \"multipart/form-data\" });\r\n        // console.log(\"response\", res.data)\r\n        if (res.data.code == 200) {\r\n            setFilepath(res.data.data)\r\n        } else {\r\n            console.warn(\"error\", res.data.message)\r\n        }\r\n        console.log(\"filepath\", filepath)\r\n    }\r\n    ///////////////////////////////////////////////modal hendler///////////////////////////////////\r\n    const [openModal, setOpenModal] = useState(false)\r\n    const modalHaldeler = async (e) => {\r\n        e.target.value == 'false' ? await setOpenModal(false) : await setOpenModal(true)\r\n    }\r\n\r\n    const saveData = async (e) => {\r\n        e.preventDefault()\r\n        console.log(\"payment_method_name\", paymetMethod1)\r\n        let data = {};\r\n        data.name = paymetMethod1\r\n        data.created_by = localStorage.getItem('subadminid')\r\n        console.log(\"requestdata\", data)\r\n        let responsefolder = await axios.post(`${CONSTANT.baseUrl}/api/admin/payment-method-create`, data);\r\n        if (responsefolder.data.code == 200) {\r\n            await loadData(id)\r\n            await setOpenModal(false)\r\n        } else {\r\n            console.log(\"error\", responsefolder.data)\r\n        }\r\n    }\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        let data = {}\r\n        // console.log(\"daaaaaaa\", id, formData1, formData, tableRow, recurrForm)\r\n        // let interval = invoice_type == 'basic_invoice' ? {\r\n        //     interval_time: \"\", day_name: \"\", day_no: \"\", every_day: \"\", every_week: \"\", every_months: \"\", start_date: \"\", month_name: \"\"\r\n        // } : recurrForm\r\n        // data = {\r\n        //     customer_id: id,\r\n        //     created_by: localStorage.getItem('subadminid'),\r\n        //     invoice_number: invoice_number,\r\n        //     invoice_type: invoice_type,\r\n        //     invoice_date: startDate,\r\n        //     due_date: endDate,\r\n        //     total: total,\r\n        //     subtotal: subtotal,\r\n        //     balance_due: balance_due,\r\n        //     invoice_message: formData.invoice_message,\r\n        //     statement_message: formData.statement_message,\r\n        //     attachments: filepath,\r\n        //     products_meta: tableRow,\r\n        //     recurring_interval: interval\r\n        // }\r\n        // // console.log(\"daaaaaaa\", data)\r\n        // let response = await axios.post(`${CONSTANT.baseUrl}/api/admin/create-invoice`, data);\r\n        // // console.log(\"response\", response)\r\n        // if (response.data.code == 200) {\r\n        //     toast(\"create successfully\");\r\n        // }\r\n    };\r\n    const allselectInvoice = async (e, invoice_no) => {\r\n        console.log(\"allselect >>>\", e.target.name, e.target.checked)\r\n        if (e.target.name == \"allselect\") {\r\n            let tempArray =[...invoiceList]\r\n            if (e.target.checked){\r\n                for (const iterator of tempArray) {\r\n                    iterator.payment =  iterator.total\r\n                    iterator.isCheck =  true\r\n                }\r\n            }else{\r\n                for (const iterator of tempArray) {\r\n                   iterator.payment =0.00\r\n                   iterator.isCheck =  false\r\n                }\r\n            }\r\n            await setInvoiceList(tempArray)\r\n            let calculatSum = await invoiceList.reduce((accumulator, current) => accumulator + current.total, 0)\r\n            setFormData({...formData , recieve_total : calculatSum})\r\n        }\r\n        if (e.target.name == \"payment\"){\r\n            let tempArray =[...invoiceList]\r\n            if(e.target.checked){\r\n                tempArray[invoice_no].payment = invoiceList[invoice_no].total\r\n            await setRecievData({...recievData , recieve_total : recieve_total+tempArray[invoice_no].payment})\r\n\r\n            }else{\r\n                tempArray[invoice_no].payment = 0.00\r\n            await setRecievData({...recievData , recieve_total : recieve_total-tempArray[invoice_no].total})\r\n\r\n            }\r\n            // console.log(\"recieve_total\", recieve_total, )\r\n            // console.log(\"tempArray[invoice_no].payment\", tempArray[invoice_no].payment,)\r\n            // console.log(\"recieve_total+tempArray[invoice_no].payment\", recieve_total)\r\n            await setInvoiceList(tempArray)\r\n        }\r\n        // console.log(\"recieve_total\", recieve_total)\r\n\r\n    }\r\n    return (\r\n        <>\r\n            {/* <!DOCTYPE html> */}\r\n\r\n            <html lang=\"en\">\r\n                <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8\" />\r\n                <head>\r\n                    <meta charset=\"utf-8\" />\r\n                    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n                    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n                    <meta name=\"description\" content=\"\" />\r\n                    <meta name=\"author\" content=\"\" />\r\n                    <meta name=\"keyword\" content=\"\" />\r\n                    <title>Winklix Internet</title>\r\n                    {/* <!-- Icons --> */}\r\n                    <link href=\"css/font-awesome.min.css\" rel=\"stylesheet\" />\r\n                    <link href=\"https://fonts.googleapis.com/css?family=Poppins:100,200,300,400,500,700,800\" rel=\"stylesheet\" />\r\n                    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\r\n                    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\r\n                    <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700;900&display=swap\" rel=\"stylesheet\" />\r\n                    {/* <!-- Main styles for this application --/> */}\r\n                    <link href=\"css/style.css\" rel=\"stylesheet\" />\r\n                    <link href=\"css/custom.css\" rel=\"stylesheet\" />\r\n                    {/* <!-- Styles required by this views --> */}\r\n                </head>\r\n                <body class=\"invoice-body\">\r\n                    <section class=\"header-invoice\">\r\n                        <div class=\"container-fluid\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-4 col-sm-4\">\r\n                                    <div class=\"left-portion\">\r\n                                        <h2><img src=\"img/wall-clock.png\" /> Invoice Recieve</h2>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-8 col-sm-8\">\r\n                                    <div class=\"right-portion\">\r\n                                        <ul>\r\n                                            <li><a href=\"javascript:void(0)\" onclick=\"openNav()\"><i class=\"fa fa-bars\"></i></a></li>\r\n                                            <li><a href=\"#\"><img src=\"img/help.png\" /> Help</a></li>\r\n                                            <li><a href=\"#\"><img src=\"img/settings.png\" /> </a></li>\r\n                                        </ul>\r\n                                        <div id=\"mySidenav1\" class=\"sidenav1\">\r\n                                            <a href=\"javascript:void(0)\" class=\"Close\" onclick=\"closeNav()\">&times;</a>\r\n                                            <h2 class=\"cust-invoice\">Add to Invoice</h2>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                    <section class=\"custom-box\">\r\n                        <div class=\"container-fluid\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-8 col-sm-8\">\r\n                                    <div class=\"custom\">\r\n                                        <form>\r\n                                            <div class=\"row\">\r\n                                                <div class=\"form-group col-sm-4 cust-width\">\r\n                                                    <label>Customer  </label>\r\n                                                    <p><a href=\"#\" data-tooltip=\"Select a Custom to Make SUre The Right Person Pays You On Time\"><i class=\"fa fa-question-circle-o\"></i></a></p>\r\n                                                    <select class=\"form-control\" name=\"customer_id\"\r\n                                                        onChange={e => onInputChange(e)} >\r\n                                                        {customer.map(item => (\r\n                                                            <option value={item._id}>{item.first_name}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                </div>\r\n\r\n                                                <div class=\"form-group col-sm-4 cust-width\">\r\n                                                    <div class=\"separate-box\">\r\n                                                        <label>Customer Email</label>\r\n                                                        <p><a href=\"#\" data-tooltip=\"You Can Send to More Than One Address By Separating Emails With a Comma \"><i class=\"fa fa-question-circle-o\"></i></a></p>\r\n                                                        <input type=\"text\" name=\"email\" disabled=\"disabled\" value={email} class=\"form-control\" placeholder=\"Separate emails with a comma\" onChange={e => onInputChange(e)} />\r\n                                                        <div class=\"form-group sent\">\r\n\r\n                                                            <label><input type=\"checkbox\" id=\"html\" name='sent_later' value={sent_later} onChange={e => onInputChange(e)} />  Sent Later</label>\r\n                                                            <p><a href=\"#\" data-tooltip=\"You Can Send Later From The All Sales List. Filter By Delivery Method>Send Later.\"><i class=\"fa fa-question-circle-o\"></i></a></p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div class=\"form-group col-sm-4\">\r\n                                                    {/* <a href=\"#\">find By Ivoice</a> */}\r\n                                                    <br></br>\r\n                                                    <div class=\"form-group\">\r\n                                                        <input type=\"text\" disabled='true' placeholder=\"find invoice here\" />\r\n                                                    </div>\r\n\r\n                                                </div>\r\n\r\n\r\n                                            </div>\r\n                                            <div class=\"float-right1\">\r\n                                                <p>AMOUNT RECEIVED</p>\r\n                                                <h2> Rs: {apply_amount}</h2>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                    <section class=\"billing-address\">\r\n                        <div class=\"container-fluid\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-8 col-sm-8\">\r\n                                    <div class=\"flex-content\">\r\n                                        <div class=\"UserRight1\">\r\n                                            <form>\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"form-group col-sm-3 cust-width2\">\r\n                                                        <label for=\"\">Payment date</label>\r\n                                                        <input type=\"date\" name=\"startDate\" value={startDate} onChange={e => onInputChange(e)} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"form-group col-sm-3\">\r\n                                                        <label for=\"\">Payment Methode</label>\r\n                                                        <select class=\"form-control taxes1\" name=\"payment_method\" onClick={e => onInputChange(e)}>\r\n                                                            {methods && methods.map((item) => <option value={item.name == '+add new' ? item.value : item.name}>{item.name}</option>)}\r\n                                                            {/* <option value={''}>+ add New</option>\r\n                                                            <option value={true}>Cash</option>\r\n                                                            <option value={true}>Check</option>\r\n                                                            <option value={false}>Credit card</option> */}\r\n                                                        </select>\r\n                                                        {/* <input type=\"text\" name=\"endDate\" value={endDate} onChange={e => onInputChange(e)} /> */}\r\n                                                    </div>\r\n                                                    <div class=\"form-group col-sm-3\">\r\n                                                        <label for=\"\">Reference no.</label>\r\n                                                        <input type=\"text\" name=\"reference_no\" value={\"\"} onChange={e => onInputChange(e)} />\r\n                                                    </div>\r\n                                                    <div class=\"form-group col-sm-3\">\r\n                                                        <label for=\"\">Deposit to</label>\r\n                                                        <select class=\"form-control taxes1\" name=\"amounts_are\" onChange={e => onInputChange(e)}>\r\n                                                            <option value={''}>Inventory Asset</option>\r\n                                                            <option value={true}>Deferred Service Tax Input Credit</option>\r\n                                                            <option value={true}>Deferred CGST</option>\r\n                                                            <option value={false}>Deferred GST Input Credit</option>\r\n                                                        </select>\r\n                                                        {/* <input type=\"text\" name=\"endDate\" value={endDate} onChange={e => onInputChange(e)} /> */}\r\n                                                    </div>\r\n\r\n                                                </div>\r\n\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-4 col-sm-4\">\r\n\r\n                                    <div class=\"invoice-box\">\r\n                                        <label>Amount Recieve</label>\r\n                                        <input type=\"number\" name=\"apply_amount\" class=\"form-control\" value={apply_amount} placeholder=\"0.00\" onChange={e => onInputChange(e)} />\r\n\r\n                                        {invoice_number_error &&\r\n                                            <div style={{ color: \"red\", paddingBottom: 10 }}>{invoice_number_error}</div>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                    <section class=\"exclusive-tax\">\r\n                        <div class=\"container-fluid\">\r\n                            <div class=\"row\">\r\n                                Outstanding Transactions\r\n                                <div class=\"form-group col-sm-9\"></div>\r\n                                <div class=\"form-group col-sm-3 exclusive-right\">\r\n                                    <label class=\"tax\">search </label>\r\n                                    <input placeholder=\"find invoice number\" name=\"searchData\" value={searchData} onChange={e => onInputChange(e)}></input>\r\n                                    <button onClick={e => getInvoiceData(id)}>search</button>\r\n                                </div>  <div class=\"form-group col-sm-3 exclusive-right\">\r\n                                    <label class=\"tax\">filter </label>\r\n                                    <input placeholder=\"find invoice number\" name=\"searchData\" value={searchData} onChange={e => onInputChange(e)}></input>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                    <section class=\"cone-table1\">\r\n                        <div class=\"container-fluid\">\r\n                            <div class=\"row clearfix\">\r\n                                <div class=\"col-md-12 column\">\r\n                                    <table border=\"1\" >\r\n                                        <tr>\r\n                                            {/* <th ><input class='check_all' type='checkbox' onclick=\"select_all()\" /></th> */}\r\n                                            {/* <button type=\"button\" class='delete'><i class=\"fa fa-trash\"></i>\r\n                                            </button>\r\n                                            <button type=\"button\" class='addmore'><i class=\"fa fa-plus-circle\"></i>\r\n                                            </button> */}\r\n                                            <th>#</th>\r\n                                            <th><input type='checkbox' name='allselect' onClick={e => allselectInvoice(e)}></input></th>\r\n                                            <th>description</th>\r\n                                            <th>due date <i class=\"fa fa-question-circle-o\"></i></th>\r\n                                            <th>orignal amount</th>\r\n                                            <th>open balance</th>\r\n                                            <th>payment</th>\r\n                                        </tr>\r\n                                        {invoiceList && invoiceList?.map((item, i) => <tr>\r\n                                            <td><span id='snum'>{i + 1}</span></td>\r\n                                            <td><input type='checkbox'  name = \"payment\" defaultChecked= {item.isCheck} onClick= {e=> allselectInvoice(e, i)}></input></td>\r\n                                            <td><span id='snum'>invoice #{item.invoice_number} /{item.invoice_date}</span></td>\r\n                                            <td><span id='snum'>{item.due_date}</span></td>\r\n                                            <td><span id='snum'>{item.total}</span></td>\r\n                                            <td><span id='snum'>{item.total}</span></td>\r\n                                            <td><input id='snum'  value = {item.payment}></input></td>\r\n                                        </tr>)}\r\n\r\n                                    </table>\r\n                                    {/* </form> */}\r\n                                    <div class=\"clearfix\"></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                    <section class=\"invoice-content\">\r\n                        <div class=\"container-fluid\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-6 col-sm-6\">\r\n                                    <div class=\"invoice-left\">\r\n                                        <div class=\"form-group col-sm-12 pd-0 message-invoice\">\r\n                                            <label>Memo</label>\r\n                                            <textarea class=\"form-control\" rows=\"3\" name='note'\r\n                                                placeholder=\"Note..\" onChange={e => onInputChange(e)}>\r\n                                            </textarea>\r\n                                        </div>\r\n                                        <div class=\"col-sm-6 pd-0 message-invoice\">\r\n                                            <form method=\"post\" action=\"#\" id=\"#\">\r\n                                                <div class=\"form-group files\">\r\n                                                    <label><i class=\"fa fa-paperclip\"> Attachments</i> <span>Maximum Size:200MB</span>\r\n                                                    </label>\r\n                                                    <input type=\"file\" class=\"form-control\" name=\"doc\" onChange={e => onSetFile(e)} />\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-6 col-sm-6\">\r\n                                    <div class=\"invoice-right\">\r\n                                        <p>Amount to Apply<span class=\"amount-invoice\"> ₹{apply_amount}</span></p>\r\n                                        <p>Amount to credit<span class=\"amount-invoice\"> ₹{recieve_total? apply_amount- recieve_total:\"0.00\"}</span></p>\r\n                                        {/* {gstTaxAmount == 'true' ? <div>   {\r\n\r\n                                            tableRow.map((item) => <div>\r\n                                                {item.tax_type == 'Gst' ? <div>\r\n                                                    <p>CGST {(item.tax / 2)} % on {item.subtotal}<span class=\"amount-invoice1\"> ₹{((total - subtotal) / 2).toFixed(2)}</span></p>\r\n                                                    <p>SGST {(item.tax / 2)} % on {item.subtotal}<span class=\"amount-invoice1\"> ₹{((total - subtotal) / 2).toFixed(2)}</span></p>\r\n                                                </div> : item.tax_type == 'Igst' ?\r\n                                                    <p>IGST {(item.tax)} % on {item.subtotal.toFixed(2)}<span class=\"amount-invoice1\"> ₹{(total - subtotal).toFixed(2)}</span></p> : \"\"\r\n                                                }\r\n                                            </div>\r\n\r\n                                            )\r\n                                        }\r\n                                            <p>Total<span class=\"amount-invoice1\"> ₹{total.toFixed(2)}</span></p>\r\n                                            <p>Balance Due<span> ₹{total.toFixed(2)}</span></p>\r\n                                        </div> : <div><p>Total<span class=\"amount-invoice1\"> ₹{subtotal}</span></p>\r\n                                            <p>Balance Due<span> ₹{subtotal}</span></p></div>} */}\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                    <section class=\"footer\">\r\n                        <div class=\"container-fluid\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-4 col-sm-4\">\r\n                                    <div class=\"footer-left\">\r\n                                        <ul>\r\n                                            <li><a href=\"\">Cancel</a></li>\r\n                                            <li><a href=\"\">Clear</a></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-4 col-sm-4\">\r\n                                    <div class=\"footer-center\">\r\n                                        <ul>\r\n                                            <li><a href=\"#\">Print or Preview</a></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-4 col-sm-4\">\r\n                                    <div class=\"footer-right\">\r\n                                        <ul>\r\n                                            <li><button onClick={e => onSubmit(e)}>Save</button></li>\r\n                                            <li class=\"save\"><a href=\"#\">Save and Send</a></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n\r\n                    {/* <!-- Bootstrap and necessary plugins --> */}\r\n\r\n                    <Modal show={openModal} >\r\n                        <Modal.Header closeButton >\r\n                            <Modal.Title>{\"cityData.name\"}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <div class=\"modal-header login-header\">\r\n                            <h4 class=\"modal-title\">Add new method</h4>\r\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" value={false} onClick={modalHaldeler}>×</button>\r\n                            {/*  value={false} onClick={opneAddorderModal} */}\r\n\r\n                        </div>\r\n                        <div class=\"row mt-60\">\r\n                            <div class=\"col-md-12 col-sm-12\">\r\n                                <div class=\"modal-body\">\r\n                                    <Form>\r\n                                        <Form.Group className=\"mb-3\" controlId=\"formGridAddress2\">\r\n                                            {/* <input  type=\"text\" placeholder=\"Client PO Number\" ></input> */}\r\n                                            <Form.Control placeholder=\"Enter Name\" name=\"payment_method_name\" onChange={onInputChange} />\r\n                                        </Form.Group>\r\n                                    </Form> </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class='footer-side'>\r\n                            <Modal.Footer>\r\n                                <Button variant=\"secondary\" value={false} onClick={modalHaldeler} > Close </Button>\r\n                                <Button variant=\"primary\" onClick={saveData} > save</Button>\r\n                            </Modal.Footer>\r\n                        </div>\r\n\r\n                    </Modal>\r\n\r\n                    <script src=\"js/jquery.min.js\" type=\"text/javascript\"></script>\r\n                    <script src=\"js/popper.min.js\" type=\"text/javascript\"></script>\r\n                    <script src=\"js/custom.js\" type=\"text/javascript\"></script>\r\n                    {/* <!--     <script src=\"js/bootstrap.min.js\"></script> --> */}\r\n\r\n                </body>\r\n\r\n            </html>\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default InvoiceRecieve;","export const baseUrl  = \"http://3.12.65.48:4004\"\r\n// export const baseUrl  = \"http://localhost:4004\"\r\n// export const img_url = \"http://localhost:4004/\"\r\nexport const img_url = \"http://3.12.65.48:4004/\"\r\nexport const CONSTANT_NUMBER_2 = 'hello I am also a constant';\r\nexport const sample_file = 'http://3.12.65.48:4004/src/assets/samplesheet.xlsx'"],"sourceRoot":""}